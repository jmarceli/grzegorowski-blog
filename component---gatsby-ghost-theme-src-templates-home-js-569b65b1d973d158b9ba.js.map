{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageHome/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageHome/index.js","webpack:///../gatsby-ghost-theme/src/templates/home.js","webpack:///../gatsby-ghost-theme/src/components/Seo/index.js","webpack:///../gatsby-ghost-theme/src/utils/seo.js","webpack:///../gatsby-ghost-theme/src/components/CardList/styles.js","webpack:///../gatsby-ghost-theme/src/components/CardList/index.js","webpack:///../gatsby-ghost-theme/src/components/Header/styles.js","webpack:///../gatsby-ghost-theme/src/components/Header/index.js","webpack:///../gatsby-ghost-theme/src/utils/mappers.js"],"names":["MenuWrapper","styled","div","withConfig","displayName","componentId","Content","variables","ButtonWrapper","ButtonMore","gatsby_browser_entry","toEm","typography","PageHome","_ref","data","posts","authors","cards","getPostCards","author","find","_ref2","node","react_default","a","createElement","PageLayout","Seo","contentType","Header","title","description","excerpt","background","fluid","Menu","CardList","to","__webpack_require__","d","__webpack_exports__","query","pageContext","React","utils_ampContext","ampContext","page","edges","seoData","headline","datePublished","date_created","dateModified","date_updated","keywords","imageUrl","relativePath","copyrightYear","name","schema","authorName","type","innerHTML","JSON","stringify","@context","@type","url","publisher","logo","image","copyrightHolder","creator","inLanguage","schemaWebsite","Object","assign","nationality","alumniOf","sameAs","gender","jobTitle","worksFor","address","addressLocality","addressCountry","schemaPerson","slug","mainEntityOfPage","@id","schemaArticle","articleBody","schemaBlogPosting","Helmet_default","script","content","Container","aside","List","ul","smallSizes","small","medium","large","mediumSizes","Item","li","size","_ref3","_ref4","_ref5","_ref6","featured","itemSize","index","even","allEven","map","card","key","id","CardPost","timeToRead","tag","dateCreated","Wrapper","header","withTopBar","white","Background","gatsby_image_default","NoBackground","Avatar","Title","h1","_ref7","Description","h2","profileImage","postsNumber","links","children","_ref$withTopBar","_ref$banner","banner","objectFit","objectPosition","alt","fixed","postToCard","postNode","authorNode"],"mappings":"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","file":"component---gatsby-ghost-theme-src-templates-home-js-569b65b1d973d158b9ba.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport {\n  CONTENT_MAX_WIDTH,\n  CONTENT_OVERLAP_HEIGHT,\n  BP_SMALL,\n  COLOR_PRIMARY,\n} from \"../variables\";\nimport { ffSans, toEm } from \"src/utils/typography\";\n\nexport const MenuWrapper = styled.div`\n  padding: 0 12px;\n  margin: 0 0 -12px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin: 24px 12px 48px;\n  @media (min-width: ${BP_SMALL}px) {\n    margin: 24px 24px 48px;\n  }\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonMore = styled(Link)`\n  color: #999;\n  border-radius: 20px;\n  border: 1px solid #999;\n  padding: 8px 16px;\n  font-size: ${toEm(12)}rem;\n  font-family: ${ffSans};\n  line-height: 1.2;\n  min-width: 120px;\n  text-align: center;\n\n  &:hover {\n    color: ${COLOR_PRIMARY};\n    border-color: ${COLOR_PRIMARY};\n  }\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport Menu from \"../Menu\";\nimport { MenuWrapper, Content, ButtonWrapper, ButtonMore } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo\";\n\nexport default function PageHome({ data, posts, authors }) {\n  const cards = getPostCards(posts, authors);\n\n  const author = authors.find(\n    ({ node }) => node.slug === data.frontmatter.author,\n  );\n\n  return (\n    <PageLayout>\n      <Seo data={data} author={author} contentType=\"website\" />\n\n      <Header\n        title={data.frontmatter.title}\n        description={data.frontmatter.excerpt}\n        background={\n          data.frontmatter.feature_image &&\n          data.frontmatter.feature_image.childImageSharp &&\n          data.frontmatter.feature_image.childImageSharp.fluid\n        }\n      />\n      <Content>\n        <MenuWrapper>\n          <Menu />\n        </MenuWrapper>\n        <CardList cards={cards} />\n        <ButtonWrapper>\n          <ButtonMore to=\"/archive\" title=\"Show all posts\">\n            View All Posts\n          </ButtonMore>\n        </ButtonWrapper>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport PageHome from \"../components/PageHome\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  return (\n    <PageHome\n      data={data.page}\n      posts={data.posts.edges}\n      authors={data.authors.edges}\n    />\n  );\n};\n\nexport const query = graphql`\n  query($slug: String) {\n    page: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      timeToRead\n      frontmatter {\n        author\n        feature_image {\n          absolutePath\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 1920) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        title\n        excerpt\n        slug\n        tags\n        date_created\n        date_updated\n        featured\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true }, layout: { nin: [\"page\", \"home\"] } }\n      }\n      limit: 16\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              absolutePath\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 600, maxHeight: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          website\n          location\n          profile_image {\n            relativePath\n            childImageSharp {\n              fixed(width: 60, height: 60) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  schemaBlogPosting,\n  schemaWebsite,\n  schemaPerson,\n  schemaArticle,\n} from \"../../utils/seo\";\n\nexport default function Seo({ data, author, contentType }) {\n  const seoData = {\n    headline: data.frontmatter.meta_title || data.frontmatter.title,\n    description:\n      data.frontmatter.meta_description ||\n      data.frontmatter.excerpt ||\n      data.excerpt,\n    datePublished: data.frontmatter.date_created,\n    dateModified: data.frontmatter.date_updated,\n    keywords: data.frontmatter.tags && data.frontmatter.tags.join(\", \"),\n    imageUrl:\n      data.frontmatter.feature_image &&\n      \"https://grzegorowski.com/\" + data.frontmatter.feature_image.relativePath,\n    copyrightYear: data.frontmatter.date_created,\n    author: author && author.node && author.node.name,\n  };\n\n  const schema =\n    contentType === \"website\"\n      ? schemaWebsite(\n          { ...seoData, url: \"https://www.grzegorowski.com\" },\n          seoData.author,\n        )\n      : contentType === \"author\"\n      ? schemaPerson({\n          name: seoData.headline,\n          imageUrl: seoData.imageUrl,\n          url: \"https://www.grzegorowski.com/\" + data.slug,\n        })\n      : contentType === \"article\"\n      ? schemaArticle(seoData, seoData.author)\n      : schemaBlogPosting(seoData, seoData.author);\n\n  return (\n    <Helmet script={schema}>\n      <title>{seoData.headline}</title>\n      <meta name=\"description\" content={seoData.description} />\n      {seoData.author && <meta name=\"author\" content={seoData.author} />}\n    </Helmet>\n  );\n}\n","export function schemaBlogPosting(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BlogPosting\", // \"Article\",\n        publisher: {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        articleBody: data.articleBody,\n        copyrightHolder: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        copyrightYear: data.copyrightYear,\n        creator: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaArticle(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Article\", // \"Article\",\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaPerson(data) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Person\",\n        name: data.name,\n        url: data.url,\n        image: data.imageUrl && {\n          \"@type\": \"ImageObject\",\n          url: data.imageUrl,\n        },\n        nationality: \"Polish\",\n        alumniOf: [\n          {\n            \"@type\": \"CollegeOrUniversity\",\n            name: \"Warsaw University of Technology\",\n            sameAs: [\n              \"https://en.wikipedia.org/wiki/Warsaw_University_of_Technology\",\n              \"https://www.pw.edu.pl/engpw\",\n            ],\n          },\n        ],\n        gender: \"Male\",\n        description: \"Full-stack developer\",\n        jobTitle: \"Senior Software Engineer\",\n        worksFor: [\n          {\n            \"@type\": \"Organization\",\n            name: \"Equinix Inc.\",\n            sameAs: [\n              \"https://www.equinix.com/\",\n              \"https://www.linkedin.com/company/equinix/\",\n              \"https://twitter.com/equinix\",\n            ],\n          },\n        ],\n        address: {\n          \"@type\": \"PostalAddress\",\n          addressLocality: \"Warsaw\",\n          addressCountry: \"Poland\",\n        },\n      }),\n    },\n  ];\n}\n\nexport function schemaWebsite(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: data.url,\n        headline: data.headline,\n        description: data.description,\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n","import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.aside`\n  background: #f4f8fb;\n`;\n\nexport const Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 12px 0;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst smallSizes = {\n  small: \"50%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\nconst mediumSizes = {\n  small: \"33.333%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\n\n// fix left-right margin collapsing\nexport const Item = styled.li`\n  display: flex;\n  flex: 1 0 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: 1 0 ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    flex: 1 0 ${({ size }) => mediumSizes[size]};\n  }\n\n  width: 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    width: ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    width: ${({ size }) => mediumSizes[size]};\n  }\n\n  margin: 0;\n  @media (min-width: ${BP_SMALL}px) {\n    min-height: ${({ size }) => (size === \"large\" ? \"400\" : \"460\")}px;\n  }\n\n  padding: 12px 8px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  ${({ featured }) => (featured ? \"padding: 6px;\" : \"\")}\n`;\n","import React from \"react\";\nimport CardPost from \"../CardPost\";\nimport { Container, List, Item } from \"./styles\";\n\n// TODO: support CardPost layout for PageTag\nconst itemSize = (index, even = false) => {\n  if (!even) {\n    if (index % 6 === 0) {\n      return \"large\";\n    }\n    if (index % 6 === 4 || index % 6 === 5) {\n      return \"medium\";\n    }\n  }\n  return \"small\";\n};\n\nexport default ({ cards, allEven }) => (\n  <Container>\n    <List>\n      {cards.map((card, index) => (\n        <Item\n          key={card.id}\n          size={itemSize(index, allEven)}\n          featured={!allEven && index === 0}\n        >\n          <CardPost\n            title={card.title}\n            slug={card.slug}\n            timeToRead={card.timeToRead}\n            size={itemSize(index, allEven)}\n            excerpt={card.excerpt}\n            image={card.image}\n            tag={card.tag}\n            author={card.author}\n            dateCreated={card.dateCreated}\n          />\n        </Item>\n      ))}\n    </List>\n  </Container>\n);\n","import styled from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  position: relative;\n  padding-top: ${({ withTopBar }) => (withTopBar ? 0 : 50)}px;\n  padding-bottom: ${({ withTopBar }) =>\n    withTopBar ? 0 : CONTENT_OVERLAP_HEIGHT}px;\n  min-height: ${({ withTopBar, large }) =>\n    withTopBar ? 450 : large ? 600 : 400}px;\n  height: 30vh;\n  color: ${({ white }) => (white ? \"#aaa\" : \"#fff\")};\n  background: ${({ white }) => (white ? \"#fff\" : \"rgba(0, 0, 0, 0.6)\")};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Background = styled(Img)`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n`;\n\nexport const NoBackground = styled.div`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  background: ${({ white }) => (white ? \"#fff\" : \"#000\")};\n`;\n\nexport const Container = styled.div`\n  padding: 12px 24px;\n  max-width: 900px;\n  font-size: ${toEm(15)}rem;\n`;\n\nexport const Avatar = styled(Img)`\n  position: relative;\n  border-radius: 50%;\n  overflow: hidden;\n  box-shadow: 0 0 0 6px hsla(0, 0%, 100%, 0.1);\n`;\n\nexport const Title = styled.h1`\n  font-family: ${ffSans};\n  font-size: ${({ large }) => toEm(large ? 128 : 24)}rem;\n  font-weight: 600;\n  margin: 12px 0;\n`;\n\nexport const Description = styled.h2`\n  font-family: ${ffSans};\n  font-size: ${toEm(16)}rem;\n  font-weight: 400;\n  margin: 0;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  Background,\n  NoBackground,\n  Container,\n  Title,\n  Description,\n} from \"./styles\";\n\nexport default function Header({\n  background,\n  profileImage,\n  title,\n  postsNumber,\n  links,\n  description,\n  children,\n  withTopBar = false,\n  banner = false,\n}) {\n  return (\n    <Wrapper withTopBar={withTopBar} white={banner} large={banner}>\n      {background ? (\n        <Background\n          fluid={background}\n          objectFit=\"cover\"\n          objectPosition=\"50% 50%\"\n          alt=\"Title\"\n        />\n      ) : (\n        <NoBackground white={banner} />\n      )}\n      <Container>\n        {profileImage && <Avatar fixed={profileImage} alt={title} />}\n        {title && <Title large={banner}>{title}</Title>}\n        {description && <Description>{description}</Description>}\n        {children}\n      </Container>\n    </Wrapper>\n  );\n}\n","export const getPostCards = (posts, authors) => {\n  const postsWithAuthors = posts.map(({ node }) => {\n    const author = authors.find(\n      ({ node: author }) => author.slug === node.frontmatter.author,\n    );\n    return postToCard(node, author);\n  });\n  return postsWithAuthors;\n};\n\nconst postToCard = (postNode, authorNode) => ({\n  id: postNode.id,\n  slug: postNode.frontmatter.slug,\n  tag:\n    postNode.frontmatter &&\n    postNode.frontmatter.tags &&\n    postNode.frontmatter.tags[0],\n  title: postNode.frontmatter.title,\n  image:\n    postNode.frontmatter &&\n    postNode.frontmatter.feature_image &&\n    postNode.frontmatter.feature_image.childImageSharp.fluid,\n  excerpt: postNode.frontmatter.excerpt || postNode.excerpt,\n  timeToRead: postNode.timeToRead,\n  dateCreated: postNode.frontmatter.date_created || postNode.date_created,\n  author: authorNode &&\n    authorNode.node && {\n      name: authorNode.node.name,\n      image:\n        authorNode.node.profile_image &&\n        authorNode.node.profile_image.childImageSharp &&\n        authorNode.node.profile_image.childImageSharp.fixed,\n    },\n});\n"],"sourceRoot":""}