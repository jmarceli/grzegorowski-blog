{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageHome/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageHome/index.js","webpack:///../gatsby-ghost-theme/src/templates/home.js"],"names":["MenuWrapper","styled","Content","ButtonWrapper","ButtonMore","toEm","PageHome","data","posts","authors","isAmp","cards","getPostCards","author","node","contentType","title","description","background","to","pageContext","React","ampContext","query"],"mappings":"uOAUaA,EAAcC,IAAH,8EAAGA,CAAH,CAAjB,qCAKMC,EAAUD,IAAH,0EAAGA,CAAH,iHAAb,KAUME,EAAgBF,IAAH,gFAAGA,CAAH,iHAAnB,KASMG,EAAaH,YAAH,8EAAGA,CAAH,iMAKRI,YALQ,YAAhB,K,wBCzBQ,SAASC,EAAS,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAA0B,IAAjBC,aAAiB,SAClEC,EAAQC,YAAaJ,EAA3B,GAEMK,EAASJ,EAAA,MACb,0BAAcK,OAAcP,cAA5B,UAGF,OACE,2BACE,uBAAKA,KAAL,EAAiBM,OAAjB,EAAiCE,YAAY,YAE7C,uBACEC,MAAOT,cADT,MAEEU,YAAaV,cAFf,QAGEW,WACEX,6BACAA,4BADAA,iBAEAA,4CANJ,MAQEG,MAAOA,IAET,yBACE,yBACE,sBAFJ,OAIE,uBAAUC,MAAOA,IACjB,yBACE,qBAAYQ,GAAZ,WAA0BH,MAAM,kBApBxC,qB,0BChBF,sCAOe,sBAA4B,IAAzBT,EAAwB,EAAxBA,KAAMa,EAAkB,EAAlBA,YAItB,OAHmBC,eAAnB,KACAC,SAAoBF,EAApBE,OAGE,qBACEf,KAAMA,EADR,KAEEC,MAAOD,QAFT,MAGEE,QAASF,UAHX,MAIEG,MAAOU,EAAYV,SATV,IAcFa,EAAN","file":"component---gatsby-ghost-theme-src-templates-home-js-73c7cb5ba1da40392ae1.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport {\n  CONTENT_MAX_WIDTH,\n  CONTENT_OVERLAP_HEIGHT,\n  BP_SMALL,\n  COLOR_PRIMARY,\n} from \"../variables\";\nimport { ffSans, toEm } from \"src/utils/typography\";\n\nexport const MenuWrapper = styled.div`\n  padding: 0 12px;\n  margin: 0 0 -12px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  width: 100%;\n  flex: 1 0 auto;\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin: 24px 12px 48px;\n  @media (min-width: ${BP_SMALL}px) {\n    margin: 24px 24px 48px;\n  }\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonMore = styled(Link)`\n  color: #999;\n  border-radius: 20px;\n  border: 1px solid #999;\n  padding: 8px 16px;\n  font-size: ${toEm(12)}rem;\n  font-family: ${ffSans};\n  line-height: 1.2;\n  min-width: 120px;\n  text-align: center;\n\n  &:hover {\n    color: ${COLOR_PRIMARY};\n    border-color: ${COLOR_PRIMARY};\n  }\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport Menu from \"../Menu\";\nimport { MenuWrapper, Content, ButtonWrapper, ButtonMore } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo\";\n\nexport default function PageHome({ data, posts, authors, isAmp = false }) {\n  const cards = getPostCards(posts, authors);\n\n  const author = authors.find(\n    ({ node }) => node.slug === data.frontmatter.author,\n  );\n\n  return (\n    <PageLayout>\n      <Seo data={data} author={author} contentType=\"website\" />\n\n      <Header\n        title={data.frontmatter.title}\n        description={data.frontmatter.excerpt}\n        background={\n          data.frontmatter.feature_image &&\n          data.frontmatter.feature_image.childImageSharp &&\n          data.frontmatter.feature_image.childImageSharp.fluid\n        }\n        isAmp={isAmp}\n      />\n      <Content>\n        <MenuWrapper>\n          <Menu />\n        </MenuWrapper>\n        <CardList cards={cards} />\n        <ButtonWrapper>\n          <ButtonMore to=\"/archive\" title=\"Show all posts\">\n            View All Posts\n          </ButtonMore>\n        </ButtonWrapper>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport PageHome from \"../components/PageHome\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  return (\n    <PageHome\n      data={data.page}\n      posts={data.posts.edges}\n      authors={data.authors.edges}\n      isAmp={pageContext.isAmp}\n    />\n  );\n};\n\nexport const query = graphql`\n  query($slug: String) {\n    page: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      timeToRead\n      frontmatter {\n        author\n        feature_image {\n          absolutePath\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 1920) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        title\n        excerpt\n        slug\n        tags\n        date_created\n        date_updated\n        featured\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: { frontmatter: { draft: { ne: true }, layout: { eq: \"post\" } } }\n      limit: 16\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              absolutePath\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 600, maxHeight: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          website\n          location\n          profile_image {\n            relativePath\n            childImageSharp {\n              fixed(width: 60, height: 60) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}