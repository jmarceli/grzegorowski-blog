{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/Page404/styles.js","webpack:///../gatsby-ghost-theme/src/components/Page404/index.js","webpack:///../gatsby-ghost-theme/src/templates/404.js"],"names":["Content","styled","LinkHomepage","toEm","Page404","posts","authors","cards","getPostCards","singlePage","opaque","banner","title","description","to","allEven","data","pageContext","React","ampContext","edges","query"],"mappings":"2NAcaA,GALSC,IAAH,yEAAGA,CAAH,CAAZ,qCAKgBA,IAAH,0EAAGA,CAAH,sGAAb,MASMC,EAAeD,YAAH,gFAAGA,CAAH,yFAEVE,YAFU,IAAlB,K,YChBQ,SAASC,EAAQ,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACjCC,EAAQC,YAAaH,EAA3B,GAEA,OACE,uBAAYI,YAAZ,EAAuBC,QAAM,GAC3B,uBAAQC,QAAR,EAAeC,MAAf,MAA2BC,YAAY,kBACrC,qBAAcC,GAAG,KAFrB,2BAIE,yBACE,uBAAUP,MAAV,EAAwBQ,SAAO,M,gBChBvC,sCAOe,sBAA4B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAItB,OAHmBC,eAAnB,KACAC,SAAoBF,EAApBE,OAEO,qBAASd,MAAOW,QAAhB,MAAkCV,QAASU,UAAaI,SAJlD,IAOFC,EAAN","file":"component---gatsby-ghost-theme-src-templates-404-js-c5b9288b653bb68aacaf.js","sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport {\n  CONTENT_MAX_WIDTH,\n  CONTENT_OVERLAP_HEIGHT,\n  COLOR_PRIMARY,\n} from \"../variables\";\n\nexport const Header = styled.div`\n  padding: 0 12px;\n  margin: 0 0 -12px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n\nexport const LinkHomepage = styled(Link)`\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  color: ${COLOR_PRIMARY};\n  margin-top: 24px;\n  display: inline-block;\n`;\n","import React from \"react\";\nimport PageLayout from \"../PageLayout\";\nimport Header from \"../Header\";\nimport CardList from \"../CardList\";\nimport { Content, LinkHomepage } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\n\nexport default function Page404({ posts, authors }) {\n  const cards = getPostCards(posts, authors);\n\n  return (\n    <PageLayout singlePage opaque>\n      <Header banner title=\"404\" description=\"Page not found\">\n        <LinkHomepage to=\"/\">Go to the front page â†’</LinkHomepage>\n      </Header>\n      <Content>\n        <CardList cards={cards} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\nimport Page404 from \"../components/Page404\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  return <Page404 posts={data.posts.edges} authors={data.authors.edges} />;\n};\n\nexport const query = graphql`\n  {\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true }, layout: { nin: [\"page\", \"home\"] } }\n      }\n      limit: 9\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600, maxHeight: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          bio\n          id\n          website\n          location\n          cover_image {\n            childImageSharp {\n              fixed(width: 30, height: 30) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}