{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageAuthor/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageAuthor/index.js","webpack:///../gatsby-ghost-theme/src/templates/author.js","webpack:///../gatsby-ghost-theme/src/components/variables.js","webpack:///../gatsby-ghost-theme/src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///../gatsby-ghost-theme/src/utils/ampContext.js","webpack:///./.cache/public-page-renderer.js","webpack:///../gatsby-ghost-theme/src/components/TopBar/styles.js","webpack:///../gatsby-ghost-theme/src/components/TopBar/index.js","webpack:///../gatsby-ghost-theme/src/components/Footer/styles.js","webpack:///../gatsby-ghost-theme/src/components/Footer/index.js","webpack:///../gatsby-ghost-theme/src/components/PageLayout.js","webpack:///../gatsby-ghost-theme/src/components/Menu/styles.js","webpack:///../gatsby-ghost-theme/src/components/Menu/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../gatsby-ghost-theme/src/components/Tile.js","webpack:///../gatsby-ghost-theme/src/components/Seo/index.js","webpack:///../gatsby-ghost-theme/src/utils/seo.js","webpack:///../gatsby-ghost-theme/src/components/CardPost/styles.js","webpack:///../gatsby-ghost-theme/src/components/CardPost/index.js","webpack:///../gatsby-ghost-theme/src/components/Header/styles.js","webpack:///../gatsby-ghost-theme/src/components/Header/index.js","webpack:///../gatsby-ghost-theme/src/components/CardList/styles.js","webpack:///../gatsby-ghost-theme/src/components/CardList/index.js","webpack:///../gatsby-ghost-theme/src/utils/mappers.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/index.js"],"names":["Contact","styled","div","withConfig","displayName","componentId","Posts","Account","a","Container","variables","Content","PageAuthor","_ref","data","posts","cards","getPostCards","node","react_default","createElement","PageLayout","singlePage","Seo","slug","frontmatter","title","name","feature_image","profile_image_large","excerpt","bio","contentType","Header","withTopBar","description","background","fluid","profileImage","fixed","index_es","icon","size","length","links","map","link","key","url","href","target","CardList","allEven","__webpack_exports__","pageContext","React","utils_ampContext","ampContext","author_slug","allAuthors","authors","edges","_ref2","id","image","PageWithList","main","cardList","author","query","__webpack_require__","d","BP_SMALL","BP_MEDIUM","BP_LARGE","CONTENT_MAX_WIDTH","ARTICLE_OFFSET_TOP","CONTENT_OVERLAP_HEIGHT","TOP_OFFSET","COLOR_PRIMARY","ffSans","toEm","typography__WEBPACK_IMPORTED_MODULE_0__","n","baseFontSize","baseLineHeight","headerWeight","pxSize","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","AmpContext","context","isAmp","setIsAmp","this","Boolean","m","module","require","default","Placeholder","Wrapper","header","opaque","Name","gatsby_browser_entry","typography","InnerName","MainMenu","Menu","TopBar","siteMetadata","_2418477646","site","Fragment","to","items","mainMenu","socialMedia","Footer","_1790210470","styles_Wrapper","styles_Container","styles_Name","copyrights","Main","children","PageLayout_Wrapper","nav","Scroller","List","ul","Item","li","Link","ExternalLink","className","item","label","social","rel","location","pageResources","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","json","Tile","seoData","headline","datePublished","date_created","dateModified","date_updated","keywords","imageUrl","relativePath","articleBody","rawMarkdownBody","copyrightYear","console","schema","authorName","type","innerHTML","JSON","stringify","@context","@type","publisher","logo","copyrightHolder","creator","inLanguage","schemaWebsite","nationality","alumniOf","sameAs","gender","jobTitle","worksFor","address","addressLocality","addressCountry","schemaPerson","mainEntityOfPage","@id","schemaArticle","schemaBlogPosting","Helmet_default","script","content","Article","article","Thumbnail","gatsby_image_default","large","NoThumbnail","_ref3","_ref4","Tag","h3","Title","h2","Excerpt","p","Author","Avatar","TimeToRead","CardPost","tag","timeToRead","src","srcSet","alt","width","aspectRatio","height","layout","objectFit","objectPosition","white","_ref5","Background","NoBackground","_ref6","h1","_ref7","Description","postsNumber","_ref$withTopBar","_ref$banner","banner","aside","smallSizes","small","medium","mediumSizes","featured","itemSize","index","even","card","find","postToCard","postNode","authorNode"],"mappings":"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","file":"component---gatsby-ghost-theme-src-templates-author-js-265a2854eaa74199de42.js","sourcesContent":["import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Contact = styled.div`\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  max-width: 100%;\n  padding: 0 24px;\n`;\n\nexport const Posts = styled.div`\n  margin-left: 20px;\n  justify-content: center;\n`;\n\nexport const Account = styled.a`\n  display: block;\n  margin-left: 20px;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  margin: -100px auto 0;\n\n  padding: 36px 8px 12px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 36px 24px 12px;\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    padding: 36px 48px 12px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: block;\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PageLayout from \"../PageLayout\";\nimport Header from \"../Header\";\nimport CardList from \"../CardList\";\nimport { Contact, Posts, Account, Content, Container } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo/index\";\n\nexport default function PageAuthor({ data, posts }) {\n  const cards = getPostCards(posts, [{ node: data }]);\n\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{\n          slug: data.slug,\n          frontmatter: {\n            title: data.name,\n            feature_image: data.profile_image_large,\n            excerpt: data.bio,\n          },\n        }}\n        contentType=\"author\"\n      />\n\n      <Header\n        withTopBar\n        title={data.name}\n        description={data.bio}\n        background={data.cover_image.childImageSharp.fluid}\n        profileImage={data.profile_image_large.childImageSharp.fixed}\n      >\n        {posts.length && data.links && data.links.length && (\n          <Contact>\n            <Posts>\n              <FontAwesomeIcon icon={[\"fas\", \"signal\"]} size=\"sm\" />{\" \"}\n              {posts.length}&nbsp;posts\n            </Posts>\n            {data.links.map(link => (\n              <Account key={link.url} href={link.url} target=\"_blank\">\n                <FontAwesomeIcon icon={link.icon} size=\"sm\" /> {link.name}\n              </Account>\n            ))}\n          </Contact>\n        )}\n      </Header>\n      <Content>\n        <Container>\n          <CardList cards={cards} allEven />\n        </Container>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PageAuthor from \"../components/PageAuthor\";\nimport PageWithList from \"../components/PageWithList\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  if (!pageContext.author_slug) {\n    const allAuthors = data.authors.edges.map(({ node }) => ({\n      id: node.id,\n      slug: `author/${node.slug}`,\n      title: node.name,\n      image: node && node.cover_image && node.cover_image.childImageSharp.fluid,\n      excerpt: node.bio,\n    }));\n\n    return (\n      <PageWithList\n        main={{ title: \"All authors\", description: \"List of all authors\" }}\n        cardList={allAuthors}\n      />\n    );\n  }\n\n  return <PageAuthor data={data.author} posts={data.posts.edges} />;\n};\n\nexport const query = graphql`\n  query($author_slug: String) {\n    author: authorsYaml(slug: { eq: $author_slug }) {\n      id\n      slug\n      name\n      bio\n      location\n      links {\n        name\n        url\n        icon\n      }\n      cover_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      profile_image_large: profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 100, height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 30, height: 30) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          cover_image {\n            relativePath\n            absolutePath\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: {\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n          author: { eq: $author_slug }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          html\n          timeToRead\n          rawMarkdownBody\n          excerpt\n          frontmatter {\n            title\n            slug\n            date\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              relativePath\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export const BP_SMALL = 600;\nexport const BP_MEDIUM = 900;\nexport const BP_LARGE = 1040; // it should ensure enough space for shadows\nexport const CONTENT_MAX_WIDTH = 1080;\nexport const ARTICLE_OFFSET_TOP = 600;\nexport const CONTENT_OVERLAP_HEIGHT = 150;\nexport const TOP_OFFSET = 50;\n\nexport const COLOR_PRIMARY = \"#3eb0ef\"; // blue\n","import Typography from \"typography\";\n// import githubTheme from \"typography-theme-github\";\n\n// const typography = new Typography(githubTheme);\nconst typography = new Typography({\n  baseFontSize: \"22px\",\n  baseLineHeight: 1.6,\n  headerWeight: 500,\n});\n\nexport const ffSans =\n  '-apple-system, \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n\nexport const toEm = pxSize => pxSize / 16;\n\nexport default typography;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\n\nconst context = {\n  isAmp: false,\n  setIsAmp(isAmp) {\n    this.isAmp = Boolean(isAmp);\n  },\n};\n\nexport const AmpContext = React.createContext(context);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Menu from \"../Menu\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_MAX_WIDTH, TOP_OFFSET } from \"../variables\";\n\nexport const Placeholder = styled.div`\n  height: ${TOP_OFFSET}px;\n`;\n\nexport const Wrapper = styled.header`\n  position: absolute;\n  top: 0;\n  z-index: 1000;\n  width: 100%;\n  background: ${({ opaque }) => (opaque ? \"#000\" : \"none\")};\n  color: #fff;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  height: 50px;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const Name = styled(Link)`\n  height: 100%;\n  padding: 0 24px;\n  max-width: 50vw;\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  font-family: ${ffSans};\n  font-size: ${toEm(14)}rem;\n  font-weight: 600;\n`;\n\nexport const InnerName = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const MainMenu = styled(Menu)`\n  max-width: 50vw;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport {\n  Placeholder,\n  Wrapper,\n  Container,\n  Name,\n  InnerName,\n  MainMenu,\n} from \"./styles\";\n\nexport default function TopBar({ opaque }) {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(query);\n\n  return (\n    <>\n      {opaque && <Placeholder />}\n      <Wrapper opaque={opaque}>\n        <Container>\n          <Name to=\"/\">\n            <InnerName>{siteMetadata.title}</InnerName>\n          </Name>\n          <MainMenu\n            items={siteMetadata.mainMenu}\n            socialMedia={siteMetadata.socialMedia}\n          />\n        </Container>\n      </Wrapper>\n    </>\n  );\n}\n\nconst query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        mainMenu {\n          label\n          slug\n        }\n        socialMedia {\n          name\n          url\n          icon\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  background: #000;\n  color: #ccc;\n`;\n\nexport const Container = styled.div`\n  padding: 18px 24px 36px;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const Name = styled(Link)`\n  padding: 12px;\n  margin: -12px 0 -12px -12px;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Wrapper, Container, Name } from \"./styles\";\n\nexport default function Footer() {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(query);\n\n  return (\n    <Wrapper>\n      <Container>\n        <Name to=\"/\">{siteMetadata.copyrights} © 2019</Name>\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst query = graphql`\n  {\n    site {\n      siteMetadata {\n        copyrights\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TopBar from \"./TopBar\";\nimport Footer from \"./Footer\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Main = styled.main`\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function PageLayout({ children, singlePage, opaque }) {\n  return (\n    <Wrapper>\n      {singlePage && <TopBar opaque={opaque} />}\n      <Main>{children}</Main>\n      <Footer />\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { Link as GatsbyLink } from \"gatsby\";\n\nexport const Wrapper = styled.nav`\n  text-transform: uppercase;\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  color: #fff;\n  flex: 1 0 auto;\n  height: 50px;\n  overflow: hidden;\n\n  &:hover {\n    color: #ccc;\n  }\n`;\n\nexport const Scroller = styled.div`\n  box-sizing: content-box;\n  height: 100%;\n  padding-bottom: 40px;\n  overflow: scroll;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const List = styled.ul`\n  height: 100%;\n  display: flex;\n  margin: 0;\n  pading: 0;\n  list-style: none;\n  white-space: nowrap;\n`;\n\nexport const Item = styled.li`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin: 0;\n\n  &:last-child {\n    padding-right: 12px;\n  }\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const Link = styled(GatsbyLink)`\n  display: flex;\n  padding: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  display: flex;\n  padding: 12px;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Scroller,\n  Container,\n  List,\n  Item,\n  Link,\n  ExternalLink,\n} from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Menu({ className, items, socialMedia }) {\n  return (\n    <Wrapper className={className}>\n      <Scroller>\n        <Container>\n          {items && items.length && (\n            <List>\n              {items.map(item => (\n                <Item key={item.label}>\n                  <Link to={item.slug}>{item.label}</Link>\n                </Item>\n              ))}\n            </List>\n          )}\n          {socialMedia && socialMedia.length && (\n            <List>\n              {socialMedia.map(social => (\n                <Item key={social.name}>\n                  <ExternalLink\n                    href={social.url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <FontAwesomeIcon icon={social.icon} size=\"sm\" />\n                  </ExternalLink>\n                </Item>\n              ))}\n            </List>\n          )}\n        </Container>\n      </Scroller>\n    </Wrapper>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n  border-radius: 5px;\n  overflow: hidden; // ensures border-radius for sub-elements\n  box-shadow: 8px 14px 38px rgba(39, 44, 49, 0.06),\n    1px 3px 8px rgba(39, 44, 49, 0.03);\n  transition: transform 0.1s ease-in;\n  transform: scale(1);\n\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nexport default function Tile({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  schemaBlogPosting,\n  schemaWebsite,\n  schemaPerson,\n  schemaArticle,\n} from \"../../utils/seo\";\n\nexport default function Seo({ data, author, contentType }) {\n  const seoData = {\n    headline: data.frontmatter.meta_title || data.frontmatter.title,\n    description:\n      data.frontmatter.meta_description ||\n      data.frontmatter.excerpt ||\n      data.excerpt,\n    datePublished: data.frontmatter.date_created,\n    dateModified: data.frontmatter.date_updated,\n    keywords: data.frontmatter.tags && data.frontmatter.tags.join(\", \"),\n    imageUrl:\n      data.frontmatter.feature_image &&\n      \"https://grzegorowski.com/\" + data.frontmatter.feature_image.relativePath,\n    articleBody: data.rawMarkdownBody,\n    copyrightYear: data.frontmatter.date_created,\n    author: author && author.node && author.node.name,\n  };\n  console.log(\"seoData\", seoData);\n\n  const schema =\n    contentType === \"website\"\n      ? schemaWebsite(\n          { ...seoData, url: \"https://www.grzegorowski.com\" },\n          seoData.author,\n        )\n      : contentType === \"author\"\n      ? schemaPerson({\n          name: seoData.headline,\n          imageUrl: seoData.imageUrl,\n          url: \"https://www.grzegorowski.com/\" + data.slug,\n        })\n      : contentType === \"article\"\n      ? schemaArticle(seoData, seoData.author)\n      : schemaBlogPosting(seoData, seoData.author);\n\n  return (\n    <Helmet script={schema}>\n      <title>{seoData.headline}</title>\n      <meta name=\"description\" content={seoData.description} />\n      {seoData.author && <meta name=\"author\" content={seoData.author} />}\n    </Helmet>\n  );\n}\n","export function schemaBlogPosting(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BlogPosting\", // \"Article\",\n        publisher: {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        articleBody: data.articleBody,\n        copyrightHolder: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        copyrightYear: data.copyrightYear,\n        creator: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaArticle(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Article\", // \"Article\",\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        articleBody: data.rawMarkdownBody,\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaPerson(data) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Person\",\n        name: data.name,\n        url: data.url,\n        image: data.imageUrl && {\n          \"@type\": \"ImageObject\",\n          url: data.imageUrl,\n        },\n        nationality: \"Polish\",\n        alumniOf: [\n          {\n            \"@type\": \"CollegeOrUniversity\",\n            name: \"Warsaw University of Technology\",\n            sameAs: [\n              \"https://en.wikipedia.org/wiki/Warsaw_University_of_Technology\",\n              \"https://www.pw.edu.pl/engpw\",\n            ],\n          },\n        ],\n        gender: \"Male\",\n        description: \"Full-stack developer\",\n        jobTitle: \"Senior Software Engineer\",\n        worksFor: [\n          {\n            \"@type\": \"Organization\",\n            name: \"Equinix Inc.\",\n            sameAs: [\n              \"https://www.equinix.com/\",\n              \"https://www.linkedin.com/company/equinix/\",\n              \"https://twitter.com/equinix\",\n            ],\n          },\n        ],\n        address: {\n          \"@type\": \"PostalAddress\",\n          addressLocality: \"Warsaw\",\n          addressCountry: \"Poland\",\n        },\n      }),\n    },\n  ];\n}\n\nexport function schemaWebsite(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: data.url,\n        headline: data.headline,\n        description: data.description,\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n","import styled from \"styled-components\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { BP_SMALL } from \"../variables\";\n\nexport const Article = styled.article`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n`;\n\nexport const Link = styled(GatsbyLink)`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n  border: none;\n\n  flex-direction: column;\n  @media (min-width: ${BP_SMALL}px) {\n    flex-direction: ${({ size }) => (size === \"large\" ? \"row\" : \"column\")};\n  }\n`;\n\nexport const Thumbnail = styled(Img)`\n  display: flex;\n  flex: 0 0 250px;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"1 0 50%\" : \"0 0 250px\")};\n  }\n`;\n\nexport const NoThumbnail = styled.div`\n  display: flex;\n  flex: 0 0 250px;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"1 0 50%\" : \"0 0 250px\")};\n  }\n  background: #262626;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  z-index: 1;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"0 1 344px\" : \"1 1 auto\")};\n  }\n  background: #fff;\n  padding: 20px;\n`;\n\nexport const Tag = styled.h3`\n  display: block;\n  font-size: ${toEm(12)}rem;\n  margin-bottom: 6px;\n  color: #666;\n  text-transform: uppercase;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  font-size: ${toEm(20)}rem;\n  line-height: 1.2;\n  margin-bottom: 0.6em;\n`;\n\nexport const Excerpt = styled.p`\n  flex: 1 0 auto;\n  display: block;\n  font-size: 0.7619rem;\n  line-height: 1.4;\n  margin: 0 0 18px;\n  font-size: ${toEm(14)}rem;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #666;\n`;\n\nexport const Author = styled.div`\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid #eee;\n`;\n\nexport const Avatar = styled(Img)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const TimeToRead = styled.div`\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #666;\n`;\n","import React from \"react\";\nimport Tile from \"../Tile\";\nimport { AmpContext } from \"../../utils/ampContext\";\nimport {\n  Article,\n  Link,\n  Thumbnail,\n  NoThumbnail,\n  Content,\n  Tag,\n  Title,\n  Excerpt,\n  Footer,\n  Author,\n  Avatar,\n  TimeToRead,\n} from \"./styles\";\n\nexport default function CardPost({\n  size,\n  title,\n  tag,\n  slug,\n  excerpt,\n  image,\n  author,\n  timeToRead,\n}) {\n  const { isAmp } = React.useContext(AmpContext);\n  const url = \"/\" + slug + (isAmp ? \"/amp/\" : \"\");\n\n  return (\n    <Tile>\n      <Article>\n        <Link to={url} title={title} size={size}>\n          {image ? (\n            isAmp ? (\n              <amp-img\n                src={image.src}\n                srcSet={image.srcSet}\n                alt={title}\n                width={image.aspectRatio}\n                height=\"1\"\n                layout=\"responsive\"\n              />\n            ) : (\n              <Thumbnail\n                large={size === \"large\"}\n                fluid={image}\n                alt={title}\n                objectFit=\"cover\"\n                objectPosition=\"50% 50%\"\n              />\n            )\n          ) : (\n            <NoThumbnail large={size === \"large\"} />\n          )}\n          <Content large={size === \"large\"}>\n            {tag && <Tag>{tag}</Tag>}\n            <Title>{title}</Title>\n            <Excerpt>{excerpt}</Excerpt>\n            {(author || timeToRead) && (\n              <Footer>\n                {author && (\n                  <Author>\n                    {isAmp ? (\n                      <amp-img\n                        src={author.image.src}\n                        srcSet={author.image.srcSet}\n                        alt={author.name}\n                        width={author.image.width}\n                        height={author.image.height}\n                        layout=\"fixed\"\n                      />\n                    ) : (\n                      <Avatar\n                        fixed={author.image}\n                        objectFit=\"cover\"\n                        objectPosition=\"50% 50%\"\n                        alt={author.name}\n                      />\n                    )}\n                  </Author>\n                )}\n                {timeToRead && <TimeToRead>{timeToRead} min read</TimeToRead>}\n              </Footer>\n            )}\n          </Content>\n        </Link>\n      </Article>\n    </Tile>\n  );\n}\n","import styled from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  position: relative;\n  padding-top: ${({ withTopBar }) => (withTopBar ? 0 : 50)}px;\n  padding-bottom: ${({ withTopBar }) =>\n    withTopBar ? 0 : CONTENT_OVERLAP_HEIGHT}px;\n  min-height: ${({ withTopBar, large }) =>\n    withTopBar ? 450 : large ? 600 : 400}px;\n  height: 30vh;\n  color: ${({ white }) => (white ? \"#aaa\" : \"#fff\")};\n  background: ${({ white }) => (white ? \"#fff\" : \"rgba(0, 0, 0, 0.6)\")};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Background = styled(Img)`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n`;\n\nexport const NoBackground = styled.div`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  background: ${({ white }) => (white ? \"#fff\" : \"#000\")};\n`;\n\nexport const Container = styled.div`\n  padding: 12px 24px;\n  max-width: 900px;\n  font-size: ${toEm(15)}rem;\n`;\n\nexport const Avatar = styled(Img)`\n  position: relative;\n  border-radius: 50%;\n  overflow: hidden;\n  box-shadow: 0 0 0 6px hsla(0, 0%, 100%, 0.1);\n`;\n\nexport const Title = styled.h1`\n  font-family: ${ffSans};\n  font-size: ${({ large }) => toEm(large ? 128 : 24)}rem;\n  font-weight: 600;\n  margin: 12px 0;\n`;\n\nexport const Description = styled.h2`\n  font-family: ${ffSans};\n  font-size: ${toEm(16)}rem;\n  font-weight: 400;\n  margin: 0;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  Background,\n  NoBackground,\n  Container,\n  Title,\n  Description,\n} from \"./styles\";\n\nexport default function Header({\n  background,\n  profileImage,\n  title,\n  postsNumber,\n  links,\n  description,\n  children,\n  withTopBar = false,\n  banner = false,\n}) {\n  return (\n    <Wrapper withTopBar={withTopBar} white={banner} large={banner}>\n      {background ? (\n        <Background\n          fluid={background}\n          objectFit=\"cover\"\n          objectPosition=\"50% 50%\"\n          alt=\"Title\"\n        />\n      ) : (\n        <NoBackground white={banner} />\n      )}\n      <Container>\n        {profileImage && <Avatar fixed={profileImage} alt={title} />}\n        {title && <Title large={banner}>{title}</Title>}\n        {description && <Description>{description}</Description>}\n        {children}\n      </Container>\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.aside`\n  background: #f4f8fb;\n`;\n\nexport const Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 12px 0;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst smallSizes = {\n  small: \"50%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\nconst mediumSizes = {\n  small: \"33.333%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\n\n// fix left-right margin collapsing\nexport const Item = styled.li`\n  display: flex;\n  flex: 1 0 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: 1 0 ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    flex: 1 0 ${({ size }) => mediumSizes[size]};\n  }\n\n  width: 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    width: ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    width: ${({ size }) => mediumSizes[size]};\n  }\n\n  margin: 0;\n  @media (min-width: ${BP_SMALL}px) {\n    min-height: ${({ size }) => (size === \"large\" ? \"400\" : \"460\")}px;\n  }\n\n  padding: 12px 8px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  ${({ featured }) => (featured ? \"padding: 6px;\" : \"\")}\n`;\n","import React from \"react\";\nimport CardPost from \"../CardPost\";\nimport { Container, List, Item } from \"./styles\";\n\n// TODO: support CardPost layout for PageTag\nconst itemSize = (index, even = false) => {\n  if (!even) {\n    if (index % 6 === 0) {\n      return \"large\";\n    }\n    if (index % 6 === 4 || index % 6 === 5) {\n      return \"medium\";\n    }\n  }\n  return \"small\";\n};\n\nexport default ({ cards, allEven }) => (\n  <Container>\n    <List>\n      {cards.map((card, index) => (\n        <Item\n          key={card.id}\n          size={itemSize(index, allEven)}\n          featured={!allEven && index === 0}\n        >\n          <CardPost\n            title={card.title}\n            slug={card.slug}\n            timeToRead={card.timeToRead}\n            size={itemSize(index, allEven)}\n            excerpt={card.excerpt}\n            image={card.image}\n            tag={card.tag}\n            author={card.author}\n          />\n        </Item>\n      ))}\n    </List>\n  </Container>\n);\n","export const getPostCards = (posts, authors) => {\n  const postsWithAuthors = posts.map(({ node }) => {\n    const author = authors.find(\n      ({ node: author }) => author.slug === node.frontmatter.author,\n    );\n    return postToCard(node, author);\n  });\n  return postsWithAuthors;\n};\n\nconst postToCard = (postNode, authorNode) => ({\n  id: postNode.id,\n  slug: postNode.frontmatter.slug,\n  tag:\n    postNode.frontmatter &&\n    postNode.frontmatter.tags &&\n    postNode.frontmatter.tags[0],\n  title: postNode.frontmatter.title,\n  image:\n    postNode.frontmatter &&\n    postNode.frontmatter.feature_image &&\n    postNode.frontmatter.feature_image.childImageSharp.fluid,\n  excerpt: postNode.excerpt || postNode.frontmatter.excerpt,\n  timeToRead: postNode.timeToRead,\n  author: authorNode &&\n    authorNode.node && {\n      name: authorNode.node.name,\n      image:\n        authorNode.node.profile_image &&\n        authorNode.node.profile_image.childImageSharp &&\n        authorNode.node.profile_image.childImageSharp.fixed,\n    },\n});\n","import styled from \"styled-components\";\nimport { CONTENT_MAX_WIDTH, CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\n// export const Content = styled.div`\n//   display: block;\n//   margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n//   max-width: ${CONTENT_MAX_WIDTH}px;\n//   flex: 1 0 auto;\n//   min-width: 33.333%;\n// `;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport { Content } from \"./styles\";\nimport Seo from \"../Seo\";\n\nexport default function PageWithList({ main, cardList }) {\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{ frontmatter: { title: main.title, excerpt: main.description } }}\n        contentType=\"website\"\n      />\n\n      <Header\n        background={main.image}\n        title={main.title}\n        description={main.description}\n      />\n      <Content>\n        <CardList cards={cardList} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n"],"sourceRoot":""}