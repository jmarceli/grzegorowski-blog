{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageAuthor/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageAuthor/index.js","webpack:///../gatsby-ghost-theme/src/templates/author.js","webpack:///../gatsby-ghost-theme/src/components/Seo/index.js","webpack:///../gatsby-ghost-theme/src/utils/seo.js","webpack:///../gatsby-ghost-theme/src/components/Header/styles.js","webpack:///../gatsby-ghost-theme/src/components/Header/index.js","webpack:///../gatsby-ghost-theme/src/components/CardList/styles.js","webpack:///../gatsby-ghost-theme/src/components/CardList/index.js","webpack:///../gatsby-ghost-theme/src/utils/mappers.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/index.js"],"names":["Contact","styled","div","withConfig","displayName","componentId","Posts","Account","a","Container","variables","Content","PageAuthor","_ref","data","posts","cards","getPostCards","node","react_default","createElement","PageLayout","singlePage","Seo","slug","frontmatter","title","name","feature_image","profile_image_large","excerpt","bio","contentType","Header","withTopBar","description","background","fluid","profileImage","fixed","index_es","icon","size","length","links","map","link","key","url","href","target","CardList","allEven","__webpack_exports__","pageContext","React","utils_ampContext","ampContext","author_slug","allAuthors","authors","edges","_ref2","id","image","PageWithList","main","cardList","author","query","seoData","headline","datePublished","date_created","dateModified","date_updated","keywords","imageUrl","relativePath","copyrightYear","schema","authorName","type","innerHTML","JSON","stringify","@context","@type","publisher","logo","copyrightHolder","creator","inLanguage","schemaWebsite","Object","assign","nationality","alumniOf","sameAs","gender","jobTitle","worksFor","address","addressLocality","addressCountry","schemaPerson","mainEntityOfPage","@id","schemaArticle","articleBody","schemaBlogPosting","Helmet_default","script","content","Wrapper","header","_ref3","large","_ref4","white","_ref5","Background","gatsby_image_default","NoBackground","_ref6","toEm","Avatar","Title","h1","typography","_ref7","Description","h2","postsNumber","children","_ref$withTopBar","_ref$banner","banner","objectFit","objectPosition","alt","__webpack_require__","d","aside","List","ul","smallSizes","small","medium","mediumSizes","Item","li","featured","itemSize","index","even","card","CardPost","timeToRead","tag","date","find","postToCard","postNode","authorNode"],"mappings":"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","file":"component---gatsby-ghost-theme-src-templates-author-js-a6b4994cd50bd7915360.js","sourcesContent":["import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Contact = styled.div`\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  max-width: 100%;\n  padding: 0 24px;\n`;\n\nexport const Posts = styled.div`\n  margin-left: 20px;\n  justify-content: center;\n`;\n\nexport const Account = styled.a`\n  display: block;\n  margin-left: 20px;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  margin: -100px auto 0;\n\n  padding: 36px 8px 12px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 36px 24px 12px;\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    padding: 36px 48px 12px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: block;\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PageLayout from \"../PageLayout\";\nimport Header from \"../Header\";\nimport CardList from \"../CardList\";\nimport { Contact, Posts, Account, Content, Container } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo/index\";\n\nexport default function PageAuthor({ data, posts }) {\n  const cards = getPostCards(posts, [{ node: data }]);\n\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{\n          slug: data.slug,\n          frontmatter: {\n            title: data.name,\n            feature_image: data.profile_image_large,\n            excerpt: data.bio,\n          },\n        }}\n        contentType=\"author\"\n      />\n\n      <Header\n        withTopBar\n        title={data.name}\n        description={data.bio}\n        background={data.cover_image.childImageSharp.fluid}\n        profileImage={data.profile_image_large.childImageSharp.fixed}\n      >\n        {posts.length && data.links && data.links.length && (\n          <Contact>\n            <Posts>\n              <FontAwesomeIcon icon={[\"fas\", \"signal\"]} size=\"sm\" />{\" \"}\n              {posts.length}&nbsp;posts\n            </Posts>\n            {data.links.map(link => (\n              <Account key={link.url} href={link.url} target=\"_blank\">\n                <FontAwesomeIcon icon={link.icon} size=\"sm\" /> {link.name}\n              </Account>\n            ))}\n          </Contact>\n        )}\n      </Header>\n      <Content>\n        <Container>\n          <CardList cards={cards} allEven />\n        </Container>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PageAuthor from \"../components/PageAuthor\";\nimport PageWithList from \"../components/PageWithList\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  if (!pageContext.author_slug) {\n    const allAuthors = data.authors.edges.map(({ node }) => ({\n      id: node.id,\n      slug: `author/${node.slug}`,\n      title: node.name,\n      image: node && node.cover_image && node.cover_image.childImageSharp.fluid,\n      excerpt: node.bio,\n    }));\n\n    return (\n      <PageWithList\n        main={{ title: \"All authors\", description: \"List of all authors\" }}\n        cardList={allAuthors}\n      />\n    );\n  }\n\n  return <PageAuthor data={data.author} posts={data.posts.edges} />;\n};\n\nexport const query = graphql`\n  query($author_slug: String) {\n    author: authorsYaml(slug: { eq: $author_slug }) {\n      id\n      slug\n      name\n      bio\n      location\n      links {\n        name\n        url\n        icon\n      }\n      cover_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      profile_image_large: profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 100, height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 30, height: 30) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          cover_image {\n            relativePath\n            absolutePath\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: {\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n          author: { eq: $author_slug }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              relativePath\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  schemaBlogPosting,\n  schemaWebsite,\n  schemaPerson,\n  schemaArticle,\n} from \"../../utils/seo\";\n\nexport default function Seo({ data, author, contentType }) {\n  const seoData = {\n    headline: data.frontmatter.meta_title || data.frontmatter.title,\n    description:\n      data.frontmatter.meta_description ||\n      data.frontmatter.excerpt ||\n      data.excerpt,\n    datePublished: data.frontmatter.date_created,\n    dateModified: data.frontmatter.date_updated,\n    keywords: data.frontmatter.tags && data.frontmatter.tags.join(\", \"),\n    imageUrl:\n      data.frontmatter.feature_image &&\n      \"https://grzegorowski.com/\" + data.frontmatter.feature_image.relativePath,\n    copyrightYear: data.frontmatter.date_created,\n    author: author && author.node && author.node.name,\n  };\n\n  const schema =\n    contentType === \"website\"\n      ? schemaWebsite(\n          { ...seoData, url: \"https://www.grzegorowski.com\" },\n          seoData.author,\n        )\n      : contentType === \"author\"\n      ? schemaPerson({\n          name: seoData.headline,\n          imageUrl: seoData.imageUrl,\n          url: \"https://www.grzegorowski.com/\" + data.slug,\n        })\n      : contentType === \"article\"\n      ? schemaArticle(seoData, seoData.author)\n      : schemaBlogPosting(seoData, seoData.author);\n\n  return (\n    <Helmet script={schema}>\n      <title>{seoData.headline}</title>\n      <meta name=\"description\" content={seoData.description} />\n      {seoData.author && <meta name=\"author\" content={seoData.author} />}\n    </Helmet>\n  );\n}\n","export function schemaBlogPosting(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BlogPosting\", // \"Article\",\n        publisher: {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        articleBody: data.articleBody,\n        copyrightHolder: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        copyrightYear: data.copyrightYear,\n        creator: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaArticle(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Article\", // \"Article\",\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaPerson(data) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Person\",\n        name: data.name,\n        url: data.url,\n        image: data.imageUrl && {\n          \"@type\": \"ImageObject\",\n          url: data.imageUrl,\n        },\n        nationality: \"Polish\",\n        alumniOf: [\n          {\n            \"@type\": \"CollegeOrUniversity\",\n            name: \"Warsaw University of Technology\",\n            sameAs: [\n              \"https://en.wikipedia.org/wiki/Warsaw_University_of_Technology\",\n              \"https://www.pw.edu.pl/engpw\",\n            ],\n          },\n        ],\n        gender: \"Male\",\n        description: \"Full-stack developer\",\n        jobTitle: \"Senior Software Engineer\",\n        worksFor: [\n          {\n            \"@type\": \"Organization\",\n            name: \"Equinix Inc.\",\n            sameAs: [\n              \"https://www.equinix.com/\",\n              \"https://www.linkedin.com/company/equinix/\",\n              \"https://twitter.com/equinix\",\n            ],\n          },\n        ],\n        address: {\n          \"@type\": \"PostalAddress\",\n          addressLocality: \"Warsaw\",\n          addressCountry: \"Poland\",\n        },\n      }),\n    },\n  ];\n}\n\nexport function schemaWebsite(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: data.url,\n        headline: data.headline,\n        description: data.description,\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n","import styled from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  position: relative;\n  padding-top: ${({ withTopBar }) => (withTopBar ? 0 : 50)}px;\n  padding-bottom: ${({ withTopBar }) =>\n    withTopBar ? 0 : CONTENT_OVERLAP_HEIGHT}px;\n  min-height: ${({ withTopBar, large }) =>\n    withTopBar ? 450 : large ? 600 : 400}px;\n  height: 30vh;\n  color: ${({ white }) => (white ? \"#aaa\" : \"#fff\")};\n  background: ${({ white }) => (white ? \"#fff\" : \"rgba(0, 0, 0, 0.6)\")};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Background = styled(Img)`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n`;\n\nexport const NoBackground = styled.div`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  background: ${({ white }) => (white ? \"#fff\" : \"#000\")};\n`;\n\nexport const Container = styled.div`\n  padding: 12px 24px;\n  max-width: 900px;\n  font-size: ${toEm(15)}rem;\n`;\n\nexport const Avatar = styled(Img)`\n  position: relative;\n  border-radius: 50%;\n  overflow: hidden;\n  box-shadow: 0 0 0 6px hsla(0, 0%, 100%, 0.1);\n`;\n\nexport const Title = styled.h1`\n  font-family: ${ffSans};\n  font-size: ${({ large }) => toEm(large ? 128 : 24)}rem;\n  font-weight: 600;\n  margin: 12px 0;\n`;\n\nexport const Description = styled.h2`\n  font-family: ${ffSans};\n  font-size: ${toEm(16)}rem;\n  font-weight: 400;\n  margin: 0;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  Background,\n  NoBackground,\n  Container,\n  Title,\n  Description,\n} from \"./styles\";\n\nexport default function Header({\n  background,\n  profileImage,\n  title,\n  postsNumber,\n  links,\n  description,\n  children,\n  withTopBar = false,\n  banner = false,\n}) {\n  return (\n    <Wrapper withTopBar={withTopBar} white={banner} large={banner}>\n      {background ? (\n        <Background\n          fluid={background}\n          objectFit=\"cover\"\n          objectPosition=\"50% 50%\"\n          alt=\"Title\"\n        />\n      ) : (\n        <NoBackground white={banner} />\n      )}\n      <Container>\n        {profileImage && <Avatar fixed={profileImage} alt={title} />}\n        {title && <Title large={banner}>{title}</Title>}\n        {description && <Description>{description}</Description>}\n        {children}\n      </Container>\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.aside`\n  background: #f4f8fb;\n`;\n\nexport const Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 12px 0;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst smallSizes = {\n  small: \"50%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\nconst mediumSizes = {\n  small: \"33.333%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\n\n// fix left-right margin collapsing\nexport const Item = styled.li`\n  display: flex;\n  flex: 1 0 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: 1 0 ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    flex: 1 0 ${({ size }) => mediumSizes[size]};\n  }\n\n  width: 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    width: ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    width: ${({ size }) => mediumSizes[size]};\n  }\n\n  margin: 0;\n  @media (min-width: ${BP_SMALL}px) {\n    min-height: ${({ size }) => (size === \"large\" ? \"400\" : \"460\")}px;\n  }\n\n  padding: 12px 8px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  ${({ featured }) => (featured ? \"padding: 6px;\" : \"\")}\n`;\n","import React from \"react\";\nimport CardPost from \"../CardPost\";\nimport { Container, List, Item } from \"./styles\";\n\n// TODO: support CardPost layout for PageTag\nconst itemSize = (index, even = false) => {\n  if (!even) {\n    if (index % 6 === 0) {\n      return \"large\";\n    }\n    if (index % 6 === 4 || index % 6 === 5) {\n      return \"medium\";\n    }\n  }\n  return \"small\";\n};\n\nexport default ({ cards, allEven }) => (\n  <Container>\n    <List>\n      {cards.map((card, index) => (\n        <Item\n          key={card.id}\n          size={itemSize(index, allEven)}\n          featured={!allEven && index === 0}\n        >\n          <CardPost\n            title={card.title}\n            slug={card.slug}\n            timeToRead={card.timeToRead}\n            size={itemSize(index, allEven)}\n            excerpt={card.excerpt}\n            image={card.image}\n            tag={card.tag}\n            author={card.author}\n            date={card.date}\n          />\n        </Item>\n      ))}\n    </List>\n  </Container>\n);\n","export const getPostCards = (posts, authors) => {\n  const postsWithAuthors = posts.map(({ node }) => {\n    const author = authors.find(\n      ({ node: author }) => author.slug === node.frontmatter.author,\n    );\n    return postToCard(node, author);\n  });\n  return postsWithAuthors;\n};\n\nconst postToCard = (postNode, authorNode) => ({\n  id: postNode.id,\n  slug: postNode.frontmatter.slug,\n  tag:\n    postNode.frontmatter &&\n    postNode.frontmatter.tags &&\n    postNode.frontmatter.tags[0],\n  title: postNode.frontmatter.title,\n  image:\n    postNode.frontmatter &&\n    postNode.frontmatter.feature_image &&\n    postNode.frontmatter.feature_image.childImageSharp.fluid,\n  excerpt: postNode.frontmatter.excerpt || postNode.excerpt,\n  timeToRead: postNode.timeToRead,\n  date:\n    postNode.frontmatter.date_updated ||\n    postNode.frontmatter.date_created ||\n    postNode.date_created,\n  author: authorNode &&\n    authorNode.node && {\n      name: authorNode.node.name,\n      image:\n        authorNode.node.profile_image &&\n        authorNode.node.profile_image.childImageSharp &&\n        authorNode.node.profile_image.childImageSharp.fixed,\n    },\n});\n","import styled from \"styled-components\";\nimport { CONTENT_MAX_WIDTH, CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\n// export const Content = styled.div`\n//   display: block;\n//   margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n//   max-width: ${CONTENT_MAX_WIDTH}px;\n//   flex: 1 0 auto;\n//   min-width: 33.333%;\n// `;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport { Content } from \"./styles\";\nimport Seo from \"../Seo\";\n\nexport default function PageWithList({ main, cardList }) {\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{ frontmatter: { title: main.title, excerpt: main.description } }}\n        contentType=\"website\"\n      />\n\n      <Header\n        background={main.image}\n        title={main.title}\n        description={main.description}\n      />\n      <Content>\n        <CardList cards={cardList} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n"],"sourceRoot":""}