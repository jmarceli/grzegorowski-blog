{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageAuthor/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageAuthor/index.js","webpack:///../gatsby-ghost-theme/src/templates/author.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/index.js"],"names":["Contact","styled","Posts","Account","Container","Content","PageAuthor","data","posts","cards","getPostCards","node","singlePage","slug","frontmatter","title","feature_image","excerpt","bio","contentType","withTopBar","description","background","profileImage","fixed","icon","size","link","key","href","target","allEven","pageContext","React","ampContext","allAuthors","id","image","main","cardList","edges","query","PageWithList"],"mappings":"yNAGaA,EAAUC,IAAH,0EAAGA,CAAH,CAAb,uFAQMC,EAAQD,IAAH,wEAAGA,CAAH,CAAX,6CAKME,EAAUF,IAAH,wEAAGA,CAAH,CAAb,iEASMG,EAAYH,IAAH,4EAAGA,CAAH,uMAAf,KAeMI,EAAUJ,IAAH,0EAAGA,CAAH,CAAb,mB,wBC/BQ,SAASK,EAAW,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnCC,EAAQC,YAAaF,EAAO,CAAC,CAAEG,KAAMJ,KAE3C,OACE,uBAAYK,YAAU,GACpB,uBACEL,KAAM,CACJM,KAAMN,EADF,KAEJO,YAAa,CACXC,MAAOR,EADI,KAEXS,cAAeT,EAFJ,oBAGXU,QAASV,EAAKW,MAGlBC,YAAY,WAGd,uBACEC,YADF,EAEEL,MAAOR,EAFT,KAGEc,YAAad,EAHf,IAIEe,WAAYf,8BAJd,MAKEgB,aAAchB,sCAAyCiB,OAEtDhB,UAAgBD,EAAhBC,OAA8BD,QAA9BC,QACC,yBACE,yBACE,uBAAiBiB,KAAM,CAAC,MAAxB,UAA0CC,KAAK,OADjD,IAEGlB,EAFH,OADF,UAKGD,EAAA,WAAe,SAAAoB,GAAI,OAClB,qBAASC,IAAKD,EAAd,IAAwBE,KAAMF,EAA9B,IAAwCG,OAAO,UAC7C,uBAAiBL,KAAME,EAAvB,KAAkCD,KAAK,OADzC,IACkDC,EAFhC,WAQ1B,yBACE,yBACE,uBAAUlB,MAAV,EAAwBsB,SAAO,O,8ECzC1B,sBAA4B,IAAzBxB,EAAwB,EAAxBA,KAAMyB,EAAkB,EAAlBA,YAItB,GAHmBC,eAAnB,KACAC,SAAoBF,EAApBE,QAEKF,EAAL,YAA8B,CAC5B,IAAMG,EAAa5B,EAAA,mBAAuB,gBAAGI,EAAH,aAAe,CACvDyB,GAAIzB,EADmD,GAEvDE,KAAK,UAAWF,EAFuC,KAGvDI,MAAOJ,EAHgD,KAIvD0B,MAAO1B,GAAQA,EAARA,aAA4BA,8BAJoB,MAKvDM,QAASN,EAAKO,QAGhB,OACE,uBACEoB,KAAM,CAAEvB,MAAF,cAAwBM,YAAa,uBAC3CkB,SAAUJ,IAKhB,OAAO,qBAAY5B,KAAMA,EAAlB,OAA+BC,MAAOD,QAAWiC,SArB3C,IAwBFC,EAAN,c,uHCrBMpC,EAAUJ,IAAH,sEAAGA,CAAH,sGAAb,K,YCJQ,SAASyC,EAAa,GAAqB,IAAnBJ,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC3C,OACE,uBAAY3B,YAAU,GACpB,uBACEL,KAAM,CAAEO,YAAa,CAAEC,MAAOuB,EAAT,MAAqBrB,QAASqB,EAAKjB,cACxDF,YAAY,YAGd,uBACEG,WAAYgB,EADd,MAEEvB,MAAOuB,EAFT,MAGEjB,YAAaiB,EAAKjB,cAEpB,yBACE,uBAAUZ,MAAV,EAA2BsB,SAAO,MArB1C","file":"component---gatsby-ghost-theme-src-templates-author-js-9b08c714d6116d2577fc.js","sourcesContent":["import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Contact = styled.div`\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  max-width: 100%;\n  padding: 0 24px;\n`;\n\nexport const Posts = styled.div`\n  margin-left: 20px;\n  justify-content: center;\n`;\n\nexport const Account = styled.a`\n  display: block;\n  margin-left: 20px;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  margin: -100px auto 0;\n\n  padding: 36px 8px 12px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 36px 24px 12px;\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    padding: 36px 48px 12px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: block;\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PageLayout from \"../PageLayout\";\nimport Header from \"../Header\";\nimport CardList from \"../CardList\";\nimport { Contact, Posts, Account, Content, Container } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo/index\";\n\nexport default function PageAuthor({ data, posts }) {\n  const cards = getPostCards(posts, [{ node: data }]);\n\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{\n          slug: data.slug,\n          frontmatter: {\n            title: data.name,\n            feature_image: data.profile_image_large,\n            excerpt: data.bio,\n          },\n        }}\n        contentType=\"author\"\n      />\n\n      <Header\n        withTopBar\n        title={data.name}\n        description={data.bio}\n        background={data.cover_image.childImageSharp.fluid}\n        profileImage={data.profile_image_large.childImageSharp.fixed}\n      >\n        {posts.length && data.links && data.links.length && (\n          <Contact>\n            <Posts>\n              <FontAwesomeIcon icon={[\"fas\", \"signal\"]} size=\"sm\" />{\" \"}\n              {posts.length}&nbsp;posts\n            </Posts>\n            {data.links.map(link => (\n              <Account key={link.url} href={link.url} target=\"_blank\">\n                <FontAwesomeIcon icon={link.icon} size=\"sm\" /> {link.name}\n              </Account>\n            ))}\n          </Contact>\n        )}\n      </Header>\n      <Content>\n        <Container>\n          <CardList cards={cards} allEven />\n        </Container>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PageAuthor from \"../components/PageAuthor\";\nimport PageWithList from \"../components/PageWithList\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  if (!pageContext.author_slug) {\n    const allAuthors = data.authors.edges.map(({ node }) => ({\n      id: node.id,\n      slug: `author/${node.slug}`,\n      title: node.name,\n      image: node && node.cover_image && node.cover_image.childImageSharp.fluid,\n      excerpt: node.bio,\n    }));\n\n    return (\n      <PageWithList\n        main={{ title: \"All authors\", description: \"List of all authors\" }}\n        cardList={allAuthors}\n      />\n    );\n  }\n\n  return <PageAuthor data={data.author} posts={data.posts.edges} />;\n};\n\nexport const query = graphql`\n  query($author_slug: String) {\n    author: authorsYaml(slug: { eq: $author_slug }) {\n      id\n      slug\n      name\n      bio\n      location\n      links {\n        name\n        url\n        icon\n      }\n      cover_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      profile_image_large: profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 100, height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 30, height: 30) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          cover_image {\n            relativePath\n            absolutePath\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: {\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n          author: { eq: $author_slug }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              relativePath\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { CONTENT_MAX_WIDTH, CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\n// export const Content = styled.div`\n//   display: block;\n//   margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n//   max-width: ${CONTENT_MAX_WIDTH}px;\n//   flex: 1 0 auto;\n//   min-width: 33.333%;\n// `;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport { Content } from \"./styles\";\nimport Seo from \"../Seo\";\n\nexport default function PageWithList({ main, cardList }) {\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{ frontmatter: { title: main.title, excerpt: main.description } }}\n        contentType=\"website\"\n      />\n\n      <Header\n        background={main.image}\n        title={main.title}\n        description={main.description}\n      />\n      <Content>\n        <CardList cards={cardList} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n"],"sourceRoot":""}