{"version":3,"sources":["webpack:///../theme/gatsby-ghost-theme/src/templates/tag.js","webpack:///../theme/gatsby-ghost-theme/src/components/variables.js","webpack:///../theme/gatsby-ghost-theme/src/utils/typography.js","webpack:///../theme/blog/.cache/gatsby-browser-entry.js","webpack:///../theme/gatsby-ghost-theme/src/utils/ampContext.js","webpack:///../theme/blog/.cache/public-page-renderer.js","webpack:///../theme/gatsby-ghost-theme/src/components/TopBar/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/TopBar/index.js","webpack:///../theme/gatsby-ghost-theme/src/components/Footer/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/Footer/index.js","webpack:///../theme/gatsby-ghost-theme/src/components/PageLayout.js","webpack:///../theme/gatsby-ghost-theme/src/components/Menu/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/Menu/index.js","webpack:///../theme/blog/.cache/public-page-renderer-prod.js","webpack:///../theme/gatsby-ghost-theme/src/components/Tile.js","webpack:///../theme/gatsby-ghost-theme/src/components/Seo/index.js","webpack:///../theme/gatsby-ghost-theme/src/utils/seo.js","webpack:///../theme/gatsby-ghost-theme/src/components/CardPost/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/CardPost/index.js","webpack:///../theme/gatsby-ghost-theme/src/components/Header/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/Header/index.js","webpack:///../theme/gatsby-ghost-theme/src/components/CardList/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/CardList/index.js","webpack:///../theme/gatsby-ghost-theme/src/utils/mappers.js","webpack:///../theme/gatsby-ghost-theme/src/components/PageWithList/styles.js","webpack:///../theme/gatsby-ghost-theme/src/components/PageWithList/index.js"],"names":["__webpack_exports__","_ref","data","pageContext","React","_utils_ampContext__WEBPACK_IMPORTED_MODULE_5__","ampContext","tag_slug","allTags","tags","edges","map","_ref2","node","id","slug","title","name","image","fluid","excerpt","description","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_PageWithList__WEBPACK_IMPORTED_MODULE_3__","main","cardList","cards","getPostCards","authors","query","__webpack_require__","d","BP_SMALL","BP_MEDIUM","BP_LARGE","CONTENT_MAX_WIDTH","ARTICLE_OFFSET_TOP","CONTENT_OVERLAP_HEIGHT","TOP_OFFSET","COLOR_PRIMARY","ffSans","toEm","typography__WEBPACK_IMPORTED_MODULE_0__","n","baseFontSize","baseLineHeight","headerWeight","pxSize","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","AmpContext","context","isAmp","setIsAmp","this","Boolean","m","module","require","default","Placeholder","styled","div","withConfig","displayName","componentId","variables","Wrapper","header","opaque","Container","Name","gatsby_browser_entry","typography","InnerName","MainMenu","Menu","TopBar","siteMetadata","_2418477646","site","react_default","Fragment","to","items","mainMenu","socialMedia","Footer","_1790210470","styles_Wrapper","styles_Container","styles_Name","copyrights","PageLayout","Main","children","singlePage","PageLayout_Wrapper","nav","Scroller","List","ul","Item","li","Link","ExternalLink","className","item","key","label","social","href","url","target","rel","index_es","icon","size","location","pageResources","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","Object","assign","json","Tile","Seo","author","contentType","seoData","headline","datePublished","date_created","dateModified","date_updated","keywords","imageUrl","relativePath","copyrightYear","schema","authorName","type","innerHTML","JSON","stringify","@context","@type","publisher","logo","copyrightHolder","creator","inLanguage","schemaWebsite","nationality","alumniOf","sameAs","gender","jobTitle","worksFor","address","addressLocality","addressCountry","schemaPerson","mainEntityOfPage","@id","schemaArticle","articleBody","schemaBlogPosting","Helmet_default","script","content","Article","article","Thumbnail","gatsby_image_default","large","NoThumbnail","_ref3","Content","_ref4","Tag","h3","Title","h2","Excerpt","p","Author","Avatar","TimeToRead","CardPost","tag","timeToRead","src","srcSet","alt","width","aspectRatio","height","layout","objectFit","objectPosition","fixed","withTopBar","white","_ref5","Background","NoBackground","_ref6","h1","_ref7","Description","Header","background","profileImage","postsNumber","links","_ref$withTopBar","_ref$banner","banner","aside","smallSizes","small","medium","mediumSizes","featured","itemSize","index","even","allEven","card","posts","find","postToCard","postNode","authorNode","PageWithList","frontmatter","CardList"],"mappings":"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","file":"component---gatsby-ghost-theme-src-templates-tag-js-b5ccead0ca0c161347bf.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport PageWithList from \"../components/PageWithList\";\nimport { getPostCards } from \"../utils/mappers\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  if (!pageContext.tag_slug) {\n    const allTags = data.tags.edges.map(({ node }) => ({\n      id: node.id,\n      slug: `tag/${node.slug}`,\n      title: node.name,\n      image:\n        node && node.feature_image && node.feature_image.childImageSharp.fluid,\n      excerpt: node.description,\n    }));\n\n    return (\n      <PageWithList\n        main={{ title: \"All tags\", description: \"List of all tags\" }}\n        cardList={allTags}\n      />\n    );\n  }\n\n  const cards = getPostCards(data.posts.edges, data.authors.edges);\n\n  return (\n    <PageWithList\n      cardList={cards}\n      main={{\n        image:\n          data.tag.feature_image &&\n          data.tag.feature_image.childImageSharp.fluid,\n        title: data.tag.name,\n        description: data.tag.description,\n      }}\n      authors={data.authors.edges}\n    />\n  );\n};\n\nexport const query = graphql`\n  query($tag_slug: String) {\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: { draft: { ne: true }, tags: { in: [$tag_slug] } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            date\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    tag: tagsYaml(slug: { eq: $tag_slug }) {\n      id\n      name\n      description\n      feature_image {\n        absolutePath\n        childImageSharp {\n          fluid(maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      meta_description\n      meta_title\n      created_at\n      updated_at\n      visibility\n    }\n    tags: allTagsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          description\n          meta_title\n          meta_description\n          created_at\n          feature_image {\n            absolutePath\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          website\n          location\n          profile_image {\n            childImageSharp {\n              fixed(width: 30, height: 30) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export const BP_SMALL = 600;\nexport const BP_MEDIUM = 900;\nexport const BP_LARGE = 1040; // it should ensure enough space for shadows\nexport const CONTENT_MAX_WIDTH = 1080;\nexport const ARTICLE_OFFSET_TOP = 600;\nexport const CONTENT_OVERLAP_HEIGHT = 150;\nexport const TOP_OFFSET = 50;\n\nexport const COLOR_PRIMARY = \"#3eb0ef\"; // blue\n","import Typography from \"typography\";\n// import githubTheme from \"typography-theme-github\";\n\n// const typography = new Typography(githubTheme);\nconst typography = new Typography({\n  baseFontSize: \"22px\",\n  baseLineHeight: 1.6,\n  headerWeight: 500,\n});\n\nexport const ffSans =\n  '-apple-system, \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif';\n\nexport const toEm = pxSize => pxSize / 16;\n\nexport default typography;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\n\nconst context = {\n  isAmp: false,\n  setIsAmp(isAmp) {\n    this.isAmp = Boolean(isAmp);\n  },\n};\n\nexport const AmpContext = React.createContext(context);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Menu from \"../Menu\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_MAX_WIDTH, TOP_OFFSET } from \"../variables\";\n\nexport const Placeholder = styled.div`\n  height: ${TOP_OFFSET}px;\n`;\n\nexport const Wrapper = styled.header`\n  position: absolute;\n  top: 0;\n  z-index: 1000;\n  width: 100%;\n  background: ${({ opaque }) => (opaque ? \"#000\" : \"none\")};\n  color: #fff;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  height: 50px;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const Name = styled(Link)`\n  height: 100%;\n  padding: 0 24px;\n  max-width: 50vw;\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  font-family: ${ffSans};\n  font-size: ${toEm(14)}rem;\n  font-weight: 600;\n`;\n\nexport const InnerName = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const MainMenu = styled(Menu)`\n  max-width: 50vw;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport {\n  Placeholder,\n  Wrapper,\n  Container,\n  Name,\n  InnerName,\n  MainMenu,\n} from \"./styles\";\n\nexport default function TopBar({ opaque }) {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(query);\n\n  return (\n    <>\n      {opaque && <Placeholder />}\n      <Wrapper opaque={opaque}>\n        <Container>\n          <Name to=\"/\">\n            <InnerName>{siteMetadata.title}</InnerName>\n          </Name>\n          <MainMenu\n            items={siteMetadata.mainMenu}\n            socialMedia={siteMetadata.socialMedia}\n          />\n        </Container>\n      </Wrapper>\n    </>\n  );\n}\n\nconst query = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        mainMenu {\n          label\n          slug\n        }\n        socialMedia {\n          name\n          url\n          icon\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  background: #000;\n  color: #ccc;\n`;\n\nexport const Container = styled.div`\n  padding: 18px 24px 36px;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const Name = styled(Link)`\n  padding: 12px;\n  margin: -12px 0 -12px -12px;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Wrapper, Container, Name } from \"./styles\";\n\nexport default function Footer() {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(query);\n\n  return (\n    <Wrapper>\n      <Container>\n        <Name to=\"/\">{siteMetadata.copyrights} © 2019</Name>\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst query = graphql`\n  {\n    site {\n      siteMetadata {\n        copyrights\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TopBar from \"./TopBar\";\nimport Footer from \"./Footer\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Main = styled.main`\n  display: flex;\n  flex: 1 0 auto;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default function PageLayout({ children, singlePage, opaque }) {\n  return (\n    <Wrapper>\n      {singlePage && <TopBar opaque={opaque} />}\n      <Main>{children}</Main>\n      <Footer />\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { Link as GatsbyLink } from \"gatsby\";\n\nexport const Wrapper = styled.nav`\n  text-transform: uppercase;\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  color: #fff;\n  flex: 1 0 auto;\n  height: 50px;\n  overflow: hidden;\n\n  &:hover {\n    color: #ccc;\n  }\n`;\n\nexport const Scroller = styled.div`\n  box-sizing: content-box;\n  height: 100%;\n  padding-bottom: 40px;\n  overflow: scroll;\n  overflow-y: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const List = styled.ul`\n  height: 100%;\n  display: flex;\n  margin: 0;\n  pading: 0;\n  list-style: none;\n  white-space: nowrap;\n`;\n\nexport const Item = styled.li`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin: 0;\n\n  &:last-child {\n    padding-right: 12px;\n  }\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const Link = styled(GatsbyLink)`\n  display: flex;\n  padding: 12px;\n`;\n\nexport const ExternalLink = styled.a`\n  display: flex;\n  padding: 12px;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Scroller,\n  Container,\n  List,\n  Item,\n  Link,\n  ExternalLink,\n} from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function Menu({ className, items, socialMedia }) {\n  return (\n    <Wrapper className={className}>\n      <Scroller>\n        <Container>\n          {items && items.length && (\n            <List>\n              {items.map(item => (\n                <Item key={item.label}>\n                  <Link to={item.slug}>{item.label}</Link>\n                </Item>\n              ))}\n            </List>\n          )}\n          {socialMedia && socialMedia.length && (\n            <List>\n              {socialMedia.map(social => (\n                <Item key={social.name}>\n                  <ExternalLink\n                    href={social.url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <FontAwesomeIcon icon={social.icon} size=\"sm\" />\n                  </ExternalLink>\n                </Item>\n              ))}\n            </List>\n          )}\n        </Container>\n      </Scroller>\n    </Wrapper>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n  border-radius: 5px;\n  overflow: hidden; // ensures border-radius for sub-elements\n  box-shadow: 8px 14px 38px rgba(39, 44, 49, 0.06),\n    1px 3px 8px rgba(39, 44, 49, 0.03);\n  transition: transform 0.1s ease-in;\n  transform: scale(1);\n\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nexport default function Tile({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport {\n  schemaBlogPosting,\n  schemaWebsite,\n  schemaPerson,\n  schemaArticle,\n} from \"../../utils/seo\";\n\nexport default function Seo({ data, author, contentType }) {\n  const seoData = {\n    headline: data.frontmatter.meta_title || data.frontmatter.title,\n    description:\n      data.frontmatter.meta_description ||\n      data.frontmatter.excerpt ||\n      data.excerpt,\n    datePublished: data.frontmatter.date_created,\n    dateModified: data.frontmatter.date_updated,\n    keywords: data.frontmatter.tags && data.frontmatter.tags.join(\", \"),\n    imageUrl:\n      data.frontmatter.feature_image &&\n      \"https://grzegorowski.com/\" + data.frontmatter.feature_image.relativePath,\n    copyrightYear: data.frontmatter.date_created,\n    author: author && author.node && author.node.name,\n  };\n\n  const schema =\n    contentType === \"website\"\n      ? schemaWebsite(\n          { ...seoData, url: \"https://www.grzegorowski.com\" },\n          seoData.author,\n        )\n      : contentType === \"author\"\n      ? schemaPerson({\n          name: seoData.headline,\n          imageUrl: seoData.imageUrl,\n          url: \"https://www.grzegorowski.com/\" + data.slug,\n        })\n      : contentType === \"article\"\n      ? schemaArticle(seoData, seoData.author)\n      : schemaBlogPosting(seoData, seoData.author);\n\n  return (\n    <Helmet script={schema}>\n      <title>{seoData.headline}</title>\n      <meta name=\"description\" content={seoData.description} />\n      {seoData.author && <meta name=\"author\" content={seoData.author} />}\n    </Helmet>\n  );\n}\n","export function schemaBlogPosting(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BlogPosting\", // \"Article\",\n        publisher: {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        articleBody: data.articleBody,\n        copyrightHolder: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        copyrightYear: data.copyrightYear,\n        creator: {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaArticle(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Article\", // \"Article\",\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        headline: data.headline,\n        description: data.description,\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        keywords: data.keywords,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": \"https://grzegorowski.com/\",\n        },\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n\nexport function schemaPerson(data) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"Person\",\n        name: data.name,\n        url: data.url,\n        image: data.imageUrl && {\n          \"@type\": \"ImageObject\",\n          url: data.imageUrl,\n        },\n        nationality: \"Polish\",\n        alumniOf: [\n          {\n            \"@type\": \"CollegeOrUniversity\",\n            name: \"Warsaw University of Technology\",\n            sameAs: [\n              \"https://en.wikipedia.org/wiki/Warsaw_University_of_Technology\",\n              \"https://www.pw.edu.pl/engpw\",\n            ],\n          },\n        ],\n        gender: \"Male\",\n        description: \"Full-stack developer\",\n        jobTitle: \"Senior Software Engineer\",\n        worksFor: [\n          {\n            \"@type\": \"Organization\",\n            name: \"Equinix Inc.\",\n            sameAs: [\n              \"https://www.equinix.com/\",\n              \"https://www.linkedin.com/company/equinix/\",\n              \"https://twitter.com/equinix\",\n            ],\n          },\n        ],\n        address: {\n          \"@type\": \"PostalAddress\",\n          addressLocality: \"Warsaw\",\n          addressCountry: \"Poland\",\n        },\n      }),\n    },\n  ];\n}\n\nexport function schemaWebsite(data, authorName) {\n  // see: https://developers.google.com/search/docs/data-types/article#type_definitions\n  return [\n    {\n      type: \"application/ld+json\",\n      innerHTML: JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: data.url,\n        headline: data.headline,\n        description: data.description,\n        publisher: authorName && {\n          \"@type\": \"Organization\",\n          logo: {\n            type: \"ImageObject\",\n            url: \"https://grzegorowski.com/favicon.ico\",\n          },\n          name: authorName,\n        },\n        author: authorName && {\n          \"@type\": \"Person\",\n          name: authorName,\n        },\n        datePublished: data.datePublished,\n        dateModified: data.dateModified,\n        image: data.imageUrl && [\n          {\n            \"@type\": \"ImageObject\",\n            url: data.imageUrl,\n          },\n        ],\n        copyrightHolder: authorName,\n        copyrightYear: data.copyrightYear,\n        creator: authorName,\n        inLanguage: \"en\",\n      }),\n    },\n  ];\n}\n","import styled from \"styled-components\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { BP_SMALL } from \"../variables\";\n\nexport const Article = styled.article`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n`;\n\nexport const Link = styled(GatsbyLink)`\n  display: flex;\n  flex: 1 0 100%;\n  width: 100%;\n  border: none;\n\n  flex-direction: column;\n  @media (min-width: ${BP_SMALL}px) {\n    flex-direction: ${({ size }) => (size === \"large\" ? \"row\" : \"column\")};\n  }\n`;\n\nexport const Thumbnail = styled(Img)`\n  display: flex;\n  flex: 0 0 250px;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"1 0 50%\" : \"0 0 250px\")};\n  }\n`;\n\nexport const NoThumbnail = styled.div`\n  display: flex;\n  flex: 0 0 250px;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"1 0 50%\" : \"0 0 250px\")};\n  }\n  background: #262626;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  z-index: 1;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: ${({ large }) => (large ? \"0 1 344px\" : \"1 1 auto\")};\n  }\n  background: #fff;\n  padding: 20px;\n`;\n\nexport const Tag = styled.h3`\n  display: block;\n  font-size: ${toEm(12)}rem;\n  margin-bottom: 6px;\n  color: #666;\n  text-transform: uppercase;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  font-size: ${toEm(20)}rem;\n  line-height: 1.2;\n  margin-bottom: 0.6em;\n`;\n\nexport const Excerpt = styled.p`\n  flex: 1 0 auto;\n  display: block;\n  font-size: 0.7619rem;\n  line-height: 1.4;\n  margin: 0 0 18px;\n  font-size: ${toEm(14)}rem;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #666;\n`;\n\nexport const Author = styled.div`\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid #eee;\n`;\n\nexport const Avatar = styled(Img)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const TimeToRead = styled.div`\n  font-family: ${ffSans};\n  font-size: ${toEm(12)}rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #666;\n`;\n","import React from \"react\";\nimport Tile from \"../Tile\";\nimport { AmpContext } from \"../../utils/ampContext\";\nimport {\n  Article,\n  Link,\n  Thumbnail,\n  NoThumbnail,\n  Content,\n  Tag,\n  Title,\n  Excerpt,\n  Footer,\n  Author,\n  Avatar,\n  TimeToRead,\n} from \"./styles\";\n\nexport default function CardPost({\n  size,\n  title,\n  tag,\n  slug,\n  excerpt,\n  image,\n  author,\n  timeToRead,\n}) {\n  const { isAmp } = React.useContext(AmpContext);\n  const url = \"/\" + slug + (isAmp ? \"/amp/\" : \"\");\n\n  return (\n    <Tile>\n      <Article>\n        <Link to={url} title={title} size={size}>\n          {image ? (\n            isAmp ? (\n              <amp-img\n                src={image.src}\n                srcSet={image.srcSet}\n                alt={title}\n                width={image.aspectRatio}\n                height=\"1\"\n                layout=\"responsive\"\n              />\n            ) : (\n              <Thumbnail\n                large={size === \"large\"}\n                fluid={image}\n                alt={title}\n                objectFit=\"cover\"\n                objectPosition=\"50% 50%\"\n              />\n            )\n          ) : (\n            <NoThumbnail large={size === \"large\"} />\n          )}\n          <Content large={size === \"large\"}>\n            {tag && <Tag>{tag}</Tag>}\n            <Title>{title}</Title>\n            <Excerpt>{excerpt}</Excerpt>\n            {(author || timeToRead) && (\n              <Footer>\n                {author && (\n                  <Author>\n                    {isAmp ? (\n                      <amp-img\n                        src={author.image.src}\n                        srcSet={author.image.srcSet}\n                        alt={author.name}\n                        width={author.image.width}\n                        height={author.image.height}\n                        layout=\"fixed\"\n                      />\n                    ) : (\n                      <Avatar\n                        fixed={author.image}\n                        objectFit=\"cover\"\n                        objectPosition=\"50% 50%\"\n                        alt={author.name}\n                      />\n                    )}\n                  </Author>\n                )}\n                {timeToRead && <TimeToRead>{timeToRead} min read</TimeToRead>}\n              </Footer>\n            )}\n          </Content>\n        </Link>\n      </Article>\n    </Tile>\n  );\n}\n","import styled from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport { ffSans, toEm } from \"src/utils/typography\";\nimport { CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\nexport const Wrapper = styled.header`\n  position: relative;\n  padding-top: ${({ withTopBar }) => (withTopBar ? 0 : 50)}px;\n  padding-bottom: ${({ withTopBar }) =>\n    withTopBar ? 0 : CONTENT_OVERLAP_HEIGHT}px;\n  min-height: ${({ withTopBar, large }) =>\n    withTopBar ? 450 : large ? 600 : 400}px;\n  height: 30vh;\n  color: ${({ white }) => (white ? \"#aaa\" : \"#fff\")};\n  background: ${({ white }) => (white ? \"#fff\" : \"rgba(0, 0, 0, 0.6)\")};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const Background = styled(Img)`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n`;\n\nexport const NoBackground = styled.div`\n  position: absolute !important;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  background: ${({ white }) => (white ? \"#fff\" : \"#000\")};\n`;\n\nexport const Container = styled.div`\n  padding: 12px 24px;\n  max-width: 900px;\n  font-size: ${toEm(15)}rem;\n`;\n\nexport const Avatar = styled(Img)`\n  position: relative;\n  border-radius: 50%;\n  overflow: hidden;\n  box-shadow: 0 0 0 6px hsla(0, 0%, 100%, 0.1);\n`;\n\nexport const Title = styled.h1`\n  font-family: ${ffSans};\n  font-size: ${({ large }) => toEm(large ? 128 : 24)}rem;\n  font-weight: 600;\n  margin: 12px 0;\n`;\n\nexport const Description = styled.h2`\n  font-family: ${ffSans};\n  font-size: ${toEm(16)}rem;\n  font-weight: 400;\n  margin: 0;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  Background,\n  NoBackground,\n  Container,\n  Title,\n  Description,\n} from \"./styles\";\n\nexport default function Header({\n  background,\n  profileImage,\n  title,\n  postsNumber,\n  links,\n  description,\n  children,\n  withTopBar = false,\n  banner = false,\n}) {\n  return (\n    <Wrapper withTopBar={withTopBar} white={banner} large={banner}>\n      {background ? (\n        <Background\n          fluid={background}\n          objectFit=\"cover\"\n          objectPosition=\"50% 50%\"\n          alt=\"Title\"\n        />\n      ) : (\n        <NoBackground white={banner} />\n      )}\n      <Container>\n        {profileImage && <Avatar fixed={profileImage} alt={title} />}\n        {title && <Title large={banner}>{title}</Title>}\n        {description && <Description>{description}</Description>}\n        {children}\n      </Container>\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Wrapper = styled.aside`\n  background: #f4f8fb;\n`;\n\nexport const Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 12px 0;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst smallSizes = {\n  small: \"50%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\nconst mediumSizes = {\n  small: \"33.333%\",\n  medium: \"50%\",\n  large: \"100%\",\n};\n\n// fix left-right margin collapsing\nexport const Item = styled.li`\n  display: flex;\n  flex: 1 0 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    flex: 1 0 ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    flex: 1 0 ${({ size }) => mediumSizes[size]};\n  }\n\n  width: 100%;\n  @media (min-width: ${BP_SMALL}px) {\n    width: ${({ size }) => smallSizes[size]};\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    width: ${({ size }) => mediumSizes[size]};\n  }\n\n  margin: 0;\n  @media (min-width: ${BP_SMALL}px) {\n    min-height: ${({ size }) => (size === \"large\" ? \"400\" : \"460\")}px;\n  }\n\n  padding: 12px 8px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 12px;\n  }\n  ${({ featured }) => (featured ? \"padding: 6px;\" : \"\")}\n`;\n","import React from \"react\";\nimport CardPost from \"../CardPost\";\nimport { Container, List, Item } from \"./styles\";\n\n// TODO: support CardPost layout for PageTag\nconst itemSize = (index, even = false) => {\n  if (!even) {\n    if (index % 6 === 0) {\n      return \"large\";\n    }\n    if (index % 6 === 4 || index % 6 === 5) {\n      return \"medium\";\n    }\n  }\n  return \"small\";\n};\n\nexport default ({ cards, allEven }) => (\n  <Container>\n    <List>\n      {cards.map((card, index) => (\n        <Item\n          key={card.id}\n          size={itemSize(index, allEven)}\n          featured={!allEven && index === 0}\n        >\n          <CardPost\n            title={card.title}\n            slug={card.slug}\n            timeToRead={card.timeToRead}\n            size={itemSize(index, allEven)}\n            excerpt={card.excerpt}\n            image={card.image}\n            tag={card.tag}\n            author={card.author}\n          />\n        </Item>\n      ))}\n    </List>\n  </Container>\n);\n","export const getPostCards = (posts, authors) => {\n  const postsWithAuthors = posts.map(({ node }) => {\n    const author = authors.find(\n      ({ node: author }) => author.slug === node.frontmatter.author,\n    );\n    return postToCard(node, author);\n  });\n  return postsWithAuthors;\n};\n\nconst postToCard = (postNode, authorNode) => ({\n  id: postNode.id,\n  slug: postNode.frontmatter.slug,\n  tag:\n    postNode.frontmatter &&\n    postNode.frontmatter.tags &&\n    postNode.frontmatter.tags[0],\n  title: postNode.frontmatter.title,\n  image:\n    postNode.frontmatter &&\n    postNode.frontmatter.feature_image &&\n    postNode.frontmatter.feature_image.childImageSharp.fluid,\n  excerpt: postNode.excerpt || postNode.frontmatter.excerpt,\n  timeToRead: postNode.timeToRead,\n  author: authorNode &&\n    authorNode.node && {\n      name: authorNode.node.name,\n      image:\n        authorNode.node.profile_image &&\n        authorNode.node.profile_image.childImageSharp &&\n        authorNode.node.profile_image.childImageSharp.fixed,\n    },\n});\n","import styled from \"styled-components\";\nimport { CONTENT_MAX_WIDTH, CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\n// export const Content = styled.div`\n//   display: block;\n//   margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n//   max-width: ${CONTENT_MAX_WIDTH}px;\n//   flex: 1 0 auto;\n//   min-width: 33.333%;\n// `;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport { Content } from \"./styles\";\nimport Seo from \"../Seo\";\n\nexport default function PageWithList({ main, cardList }) {\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{ frontmatter: { title: main.title, excerpt: main.description } }}\n        contentType=\"website\"\n      />\n\n      <Header\n        background={main.image}\n        title={main.title}\n        description={main.description}\n      />\n      <Content>\n        <CardList cards={cardList} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n"],"sourceRoot":""}