{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/templates/archive.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageWithList/index.js"],"names":["data","pageContext","React","ampContext","cards","getPostCards","main","title","description","image","fluid","cardList","isAmp","query","Content","styled","PageWithList","singlePage","frontmatter","excerpt","contentType","background","allEven"],"mappings":"6FAAA,sHAQe,sBAA4B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACHC,eAAnB,KACAC,SAAoBF,EAApBE,OAEA,IAAMC,EAAQC,YAAaL,QAAD,MAAmBA,UAA7C,OAEA,OACE,uBACEM,KAAM,CACJC,MAAOP,mBADH,MAEJQ,YAAaR,mBAFT,QAGJS,MAAOT,iDAAoDU,OAE7DC,SANF,EAOEC,MAAOX,EAAYW,SAKlB,IAAMC,EAAN,a,uHChBMC,EAAUC,IAAH,sEAAGA,CAAH,sGAAb,K,YCJQ,SAASC,EAAa,GAAoC,IAAlCV,EAAiC,EAAjCA,KAAMK,EAA2B,EAA3BA,SAA2B,IAAjBC,aAAiB,SACtE,OACE,uBAAYK,YAAU,GACpB,uBACEjB,KAAM,CAAEkB,YAAa,CAAEX,MAAOD,EAAT,MAAqBa,QAASb,EAAKE,cACxDY,YAAY,YAGd,uBACEC,WAAYf,EADd,MAEEC,MAAOD,EAFT,MAGEE,YAAaF,EAHf,YAIEM,MAAOA,IAET,yBACE,uBAAUR,MAAV,EAA2BkB,SAAO,MAtB1C","file":"component---gatsby-ghost-theme-src-templates-archive-js-c67ee4a5d260714273f0.js","sourcesContent":["import React from \"react\";\nimport PageWithList from \"../components/PageWithList\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\nimport { AmpContext } from \"../utils/ampContext\";\nimport { getPostCards } from \"../utils/mappers\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  const cards = getPostCards(data.posts.edges, data.authors.edges);\n\n  return (\n    <PageWithList\n      main={{\n        title: data.page.frontmatter.title,\n        description: data.page.frontmatter.excerpt,\n        image: data.page.frontmatter.feature_image.childImageSharp.fluid,\n      }}\n      cardList={cards}\n      isAmp={pageContext.isAmp}\n    />\n  );\n};\n\nexport const query = graphql`\n  query($slug: String) {\n    page: markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      timeToRead\n      frontmatter {\n        author\n        feature_image {\n          absolutePath\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 1920) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        title\n        excerpt\n        slug\n        tags\n        date_created\n        date_updated\n        featured\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: { frontmatter: { draft: { ne: true }, layout: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n            slug\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              absolutePath\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 600, maxHeight: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          website\n          location\n          profile_image {\n            relativePath\n            childImageSharp {\n              fixed(width: 30, height: 30) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { CONTENT_MAX_WIDTH, CONTENT_OVERLAP_HEIGHT } from \"../variables\";\n\n// export const Content = styled.div`\n//   display: block;\n//   margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n//   max-width: ${CONTENT_MAX_WIDTH}px;\n//   flex: 1 0 auto;\n//   min-width: 33.333%;\n// `;\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin: -${CONTENT_OVERLAP_HEIGHT}px auto 0;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  flex: 1 0 auto;\n`;\n","import React from \"react\";\nimport CardList from \"../CardList\";\nimport Header from \"../Header\";\nimport PageLayout from \"../PageLayout\";\nimport { Content } from \"./styles\";\nimport Seo from \"../Seo\";\n\nexport default function PageWithList({ main, cardList, isAmp = false }) {\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{ frontmatter: { title: main.title, excerpt: main.description } }}\n        contentType=\"website\"\n      />\n\n      <Header\n        background={main.image}\n        title={main.title}\n        description={main.description}\n        isAmp={isAmp}\n      />\n      <Content>\n        <CardList cards={cardList} allEven />\n      </Content>\n    </PageLayout>\n  );\n}\n"],"sourceRoot":""}