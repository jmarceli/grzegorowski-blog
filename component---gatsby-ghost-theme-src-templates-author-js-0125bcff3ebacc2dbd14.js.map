{"version":3,"sources":["webpack:///../gatsby-ghost-theme/src/components/PageAuthor/styles.js","webpack:///../gatsby-ghost-theme/src/components/PageAuthor/index.js","webpack:///../gatsby-ghost-theme/src/templates/author.js"],"names":["Contact","styled","div","withConfig","displayName","componentId","Posts","Account","a","Container","variables","Content","PageAuthor","_ref","data","posts","cards","getPostCards","node","react_default","createElement","PageLayout","singlePage","Seo","frontmatter","title","name","feature_image","profile_image_large","excerpt","bio","contentType","Header","withTopBar","description","background","fluid","profileImage","fixed","index_es","icon","size","length","links","map","link","key","url","href","target","CardList","allEven","__webpack_exports__","pageContext","React","utils_ampContext","ampContext","author_slug","allAuthors","authors","edges","_ref2","id","slug","image","PageWithList","main","cardList","author","query"],"mappings":"2LAGaA,EAAUC,IAAHC,IAAAC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,CAAb,uFAQMK,EAAQL,IAAHC,IAAAC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,CAAX,6CAKMM,EAAUN,IAAHO,EAAAL,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,CAAb,iEASMQ,EAAYR,IAAHC,IAAAC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,+LAAAS,EAAA,EAAAA,EAAA,EAAfA,EAAA,GAeMC,EAAUV,IAAHC,IAAAC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,CAAb,qCC/BQ,SAAAW,EAAAC,GAAqC,IAAfC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACnCC,EAAQC,YAAYF,EAAQ,CAAC,CAAEG,KAAMJ,KAE3C,OACEK,EAAAX,EAAAY,cAAAC,EAAA,GAAYC,YAAU,GACpBH,EAAAX,EAAAY,cAAAG,EAAA,GACET,KAAM,CACJU,YAAa,CACXC,MAAOX,EADIY,KAEXC,cAAeb,EAFJc,oBAGXC,QAASf,EAAKgB,MAGlBC,YAAY,WAGdZ,EAAAX,EAAAY,cAAAY,EAAA,GACEC,YADF,EAEER,MAAOX,EAFTY,KAGEQ,YAAapB,EAHfgB,IAIEK,WAAYrB,8BAJdsB,MAKEC,aAAcvB,sCAAyCwB,OAEtDvB,UAAgBD,EAAhBC,OAA8BD,QAA9BC,QACCI,EAAAX,EAAAY,cAAApB,EAAA,KACEmB,EAAAX,EAAAY,cAAAd,EAAA,KACEa,EAAAX,EAAAY,cAAAmB,EAAA,GAAiBC,KAAM,OAAvB,UAA0CC,KAAK,OADjD,IAEG1B,EAFH2B,OADF,UAKG5B,EAAA6B,MAAAC,IAAe,SAAAC,GAAI,OAClB1B,EAAAX,EAAAY,cAAAb,EAAA,CAASuC,IAAKD,EAAdE,IAAwBC,KAAMH,EAA9BE,IAAwCE,OAAO,UAC7C9B,EAAAX,EAAAY,cAAAmB,EAAA,GAAiBC,KAAMK,EAAvBL,KAAkCC,KAAK,OADzC,IACkDI,EAFhCnB,UAQ1BP,EAAAX,EAAAY,cAAAT,EAAA,KACEQ,EAAAX,EAAAY,cAAAX,EAAA,KACEU,EAAAX,EAAAY,cAAA8B,EAAA,GAAUlC,MAAVA,EAAwBmC,SAAO,0ECxC1BC,EAAA,iBAAAvC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMuC,EAAkBxC,EAAlBwC,YAItB,GAHmBC,eAAnBC,EAAA,GACAC,SAAoBH,EAApBG,QAEKH,EAALI,YAA8B,CAC5B,IAAMC,EAAa5C,EAAA6C,QAAAC,MAAAhB,IAAuB,SAAAiB,GAAA,IAAG3C,EAAH2C,EAAA3C,KAAA,MAAe,CACvD4C,GAAI5C,EADmD4C,GAEvDC,KAAI,UAAY7C,EAFuC6C,KAGvDtC,MAAOP,EAHgDQ,KAIvDsC,MAAO9C,GAAQA,EAARA,aAA4BA,8BAJoBkB,MAKvDP,QAASX,EAAKY,OAGhB,OACEX,EAAAX,EAAAY,cAAA6C,EAAA,GACEC,KAAM,CAAEzC,MAAF,cAAwBS,YAAa,uBAC3CiC,SAAUT,IAKhB,OAAOvC,EAAAX,EAAAY,cAAAR,EAAA,CAAYE,KAAMA,EAAlBsD,OAA+BrD,MAAOD,QAAW8C,SArB3C,IAwBFS,EAAN","file":"component---gatsby-ghost-theme-src-templates-author-js-0125bcff3ebacc2dbd14.js","sourcesContent":["import styled from \"styled-components\";\nimport { BP_SMALL, BP_MEDIUM, CONTENT_MAX_WIDTH } from \"../variables\";\n\nexport const Contact = styled.div`\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  max-width: 100%;\n  padding: 0 24px;\n`;\n\nexport const Posts = styled.div`\n  margin-left: 20px;\n  justify-content: center;\n`;\n\nexport const Account = styled.a`\n  display: block;\n  margin-left: 20px;\n\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${CONTENT_MAX_WIDTH}px;\n  margin: -100px auto 0;\n\n  padding: 36px 8px 12px;\n  @media (min-width: ${BP_SMALL}px) {\n    padding: 36px 24px 12px;\n  }\n  @media (min-width: ${BP_MEDIUM}px) {\n    padding: 36px 48px 12px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: block;\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PageLayout from \"../PageLayout\";\nimport Header from \"../Header\";\nimport CardList from \"../CardList\";\nimport { Contact, Posts, Account, Content, Container } from \"./styles\";\nimport { getPostCards } from \"../../utils/mappers\";\nimport Seo from \"../Seo/index\";\n\nexport default function PageAuthor({ data, posts }) {\n  const cards = getPostCards(posts, [{ node: data }]);\n\n  return (\n    <PageLayout singlePage>\n      <Seo\n        data={{\n          frontmatter: {\n            title: data.name,\n            feature_image: data.profile_image_large,\n            excerpt: data.bio,\n          },\n        }}\n        contentType=\"author\"\n      />\n\n      <Header\n        withTopBar\n        title={data.name}\n        description={data.bio}\n        background={data.cover_image.childImageSharp.fluid}\n        profileImage={data.profile_image_large.childImageSharp.fixed}\n      >\n        {posts.length && data.links && data.links.length && (\n          <Contact>\n            <Posts>\n              <FontAwesomeIcon icon={[\"fas\", \"signal\"]} size=\"sm\" />{\" \"}\n              {posts.length}&nbsp;posts\n            </Posts>\n            {data.links.map(link => (\n              <Account key={link.url} href={link.url} target=\"_blank\">\n                <FontAwesomeIcon icon={link.icon} size=\"sm\" /> {link.name}\n              </Account>\n            ))}\n          </Contact>\n        )}\n      </Header>\n      <Content>\n        <Container>\n          <CardList cards={cards} allEven />\n        </Container>\n      </Content>\n    </PageLayout>\n  );\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PageAuthor from \"../components/PageAuthor\";\nimport PageWithList from \"../components/PageWithList\";\n// eslint-disable-next-line no-unused-vars\nimport { GatsbyImageSharpFixed, GatsbyImageSharpFluid } from \"gatsby-image\";\nimport { AmpContext } from \"../utils/ampContext\";\n\nexport default ({ data, pageContext }) => {\n  const ampContext = React.useContext(AmpContext);\n  ampContext.setIsAmp(pageContext.isAmp);\n\n  if (!pageContext.author_slug) {\n    const allAuthors = data.authors.edges.map(({ node }) => ({\n      id: node.id,\n      slug: `author/${node.slug}`,\n      title: node.name,\n      image: node && node.cover_image && node.cover_image.childImageSharp.fluid,\n      excerpt: node.bio,\n    }));\n\n    return (\n      <PageWithList\n        main={{ title: \"All authors\", description: \"List of all authors\" }}\n        cardList={allAuthors}\n      />\n    );\n  }\n\n  return <PageAuthor data={data.author} posts={data.posts.edges} />;\n};\n\nexport const query = graphql`\n  query($author_slug: String) {\n    author: authorsYaml(slug: { eq: $author_slug }) {\n      id\n      slug\n      name\n      bio\n      location\n      links {\n        name\n        url\n        icon\n      }\n      cover_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 1920) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      profile_image_large: profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 100, height: 100) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      profile_image {\n        absolutePath\n        relativePath\n        childImageSharp {\n          fixed(width: 30, height: 30) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n    authors: allAuthorsYaml {\n      edges {\n        node {\n          id\n          slug\n          name\n          bio\n          cover_image {\n            relativePath\n            absolutePath\n            childImageSharp {\n              fluid(maxWidth: 600) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      filter: {\n        frontmatter: {\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n          author: { eq: $author_slug }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          html\n          timeToRead\n          rawMarkdownBody\n          excerpt\n          frontmatter {\n            title\n            slug\n            date\n            tags\n            date_created\n            date_updated\n            author\n            feature_image {\n              relativePath\n              absolutePath\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}